<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AngelSix.SolidDna</name>
    </assembly>
    <members>
        <member name="T:AngelSix.SolidDna.AssemblyObjectExtensions">
            <summary>
            Extension methods for objects related to assembly information
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.AssemblyObjectExtensions.AssemblyPath(System.Object)">
            <summary>
            Gets the full path directory of the physical file (typically .exe or .dll)
            for where the callers type is located
            </summary>
            <param name="self">An instance of the calling type</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AssemblyObjectExtensions.AssemblyFilePath(System.Object)">
            <summary>
            Gets the full path (including filename) of the physical file (typically .exe or .dll)
            for where the callers type is located 
            </summary>
            <param name="self">An instance of the calling type</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.AsyncAwaitor">
            <summary>
            Adds the ability to safely await on tasks to be complete that need limited access. 
            For example, only allowing one task to access some data at a time, like the old 
            async locks.
            This awaiter uses the safer semaphore to prevent any chance of a deadlock.
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.AsyncAwaitor.SelfLock">
            <summary>
            A semaphore to lock the semaphore list
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.AsyncAwaitor.Semaphores">
            <summary>
            A list of all semaphore locks (one per key)
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.AsyncAwaitor.AwaitAsync(System.String,System.Func{System.Threading.Tasks.Task},System.Int32)">
            <summary>
            Awaits for any outstanding tasks to complete that are accessing the same key
            </summary>
            <param name="key">The key to await</param>
            <param name="task">The task to perform inside of the semaphore lock</param>
            <param name="maxAccessCount">If this is the first call, sets the maximum number of tasks that can access this task before it waiting</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AsyncAwaitor.AwaitAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Int32)">
            <summary>
            Awaits for any outstanding tasks to complete that are accessing the same key
            </summary>
            <param name="key">The key to await</param>
            <param name="task">The task to perform inside of the semaphore lock</param>
            <param name="maxAccessCount">If this is the first call, sets the maximum number of tasks that can access this task before it waiting</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.AsyncHelpers">
            <summary>
            Helper methods for working with async
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.AsyncHelpers.RunSync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Helper to run an asynchronous function as synchronous where all internal await's are decorated with .ConfigureAwait(false)
            </summary>
            <typeparam name="TResult">The type of return data the function returns</typeparam>
            <param name="func">The function to run</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AsyncHelpers.RunSync(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Helper to run an asynchronous function as synchronous where all internal await's are decorated with .ConfigureAwait(false)
            </summary>
            <param name="func">The function to run</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.SemaphoreDetails">
            <summary>
            Contains information about a semaphore lock
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SemaphoreDetails.Semaphore">
            <summary>
            The semaphore for this item
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SemaphoreDetails.Key">
            <summary>
            The unique key for this semaphore lock
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SemaphoreDetails.#ctor(System.String,System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="key">The unique key for this semaphore</param>
            <param name="maxAccessCount">The maximum number of access counts to this semaphore before waiting</param>
        </member>
        <member name="T:AngelSix.SolidDna.DependencyInjectionExtensions">
            <summary>
            Extension methods for adding DI implementations
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.DependencyInjectionExtensions.AddLocalizationManager(Dna.FrameworkConstruction)">
            <summary>
            Adds the Localization manage to the DI
            </summary>
            <param name="construction">The construction</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.ILocalizationManager">
            <summary>
            A resource manager that supports localization
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ILocalizationManager.DefaultCulture">
            <summary>
            The default culture to use. If not specified the system default is used
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ILocalizationManager.StringResourceDefinition">
            <summary>
            The path to the string resource files, containing {0} where the culture name is
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ILocalizationManager.Providers">
            <summary>
            A list of providers this manager can call upon to decode resources
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ILocalizationManager.GetStringAsync(System.String,System.String)">
            <summary>
            Finds a string of the given name, taking into account the culture information.
            If no culture is specified, the default culture is used
            
            IMPORTANT:
            NOTE: Make sure any and all await calls inside this function and its children
                  use ConfigureAwait(false). This is because the parent has to support 
                  a synchronous version of this call, so the method cannot sync back with
                  its calling context without risk of deadlock
            </summary>
            <param name="name">The name of the resource to find</param>
            <param name="culture">The culture information to use</param>
            <returns>Returns the string if found, or null if not found</returns>
        </member>
        <member name="T:AngelSix.SolidDna.IResourceFormatProvider">
            <summary>
            A resource format provider for use with an ILocalizationManager
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.IResourceFormatProvider.SupportsFormat(System.String)">
            <summary>
            Determines if the specified format is supported by this provider
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.IResourceFormatProvider.GetStringAsync(AngelSix.SolidDna.ResourceDefinition,System.String,System.String,System.Action{System.String})">
            <summary>
            Finds a string of the given name, taking into account the culture information.
            If no culture is specified, the default culture is used
            
            IMPORTANT:
            NOTE: Make sure any and all await calls inside this function and its children
                  use ConfigureAwait(false). This is because the parent has to support 
                  a synchronous version of this call, so the method cannot sync back with
                  it's calling context without risk of deadlock
            </summary>
            <param name="resource">The resource definition</param>
            <param name="name">The name of the resource to find</param>
            <param name="culture">The culture information to use</param>
            <param name="onResult">Called with the value if successful</param>
            <returns>Returns true if fetching the value was successful</returns>
        </member>
        <member name="T:AngelSix.SolidDna.IoC">
            <summary>
            Access to available IoC services
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.IoC.Localization">
            <summary>
            Access the <see cref="T:AngelSix.SolidDna.ILocalizationManager"/>
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.IoC.AddIn">
            <summary>
            The instance of the <see cref="T:AngelSix.SolidDna.AddInIntegration"/> class that is used for this add-in
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.IoC.Get``1">
            <summary>
            Attempts to get the injected service of the specified type
            </summary>
            <typeparam name="T">The type of service to fetch</typeparam>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.IoC.Get(System.Type)">
            <summary>
            Attempts to get the injected service of the specified type
            </summary>
            <param name="type">The type of service to fetch</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.IoC.Setup(System.String,System.Action{Dna.FrameworkConstruction})">
            <summary>
            Sets up the IoC and injects all required elements
            </summary>
            <param name="addinPath">The full path to the add-in dll file</param>
            <param name="configureServices">Provides a callback to inject any services into the Dna.Framework DI system</param>
        </member>
        <member name="T:AngelSix.SolidDna.IoCContainer">
            <summary>
            Access to available IoC services
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.IoCContainer.Get``1">
            <summary>
            Attempts to get the injected service of the specified type
            </summary>
            <typeparam name="T">The type of service to fetch</typeparam>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.IoCContainer.Get(System.Type)">
            <summary>
            Attempts to get the injected service of the specified type
            </summary>
            <param name="type">The type of service to fetch</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.EnumHelpers">
            <summary>
            Helper methods for enumerators
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.EnumHelpers.GetFlags``1(``0)">
            <summary>
            Gets all flags from an enumerator
            </summary>
            <typeparam name="T">The type of enumerator</typeparam>
            <param name="enumerator">The value of the enumerator</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaError">
            <summary>
            Details about an error that has occurred on SolidDNA
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.ErrorMessage">
            <summary>
            A generic error message for this type of error
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.ErrorDetails">
            <summary>
            A descriptive error message about this specific error
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.ErrorTypeCode">
            <summary>
            The error type code for this error
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.ErrorTypeCodeValue">
            <summary>
            The enum value that this error type code refers to. See <see cref="T:AngelSix.SolidDna.SolidDnaErrorTypeCode"/>
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.ErrorCode">
            <summary>
            The unique error code for this exact error
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.ErrorCodeValue">
            <summary>
            The enum value that this error code refers to. See <see cref="T:AngelSix.SolidDna.SolidDnaErrorCode"/>
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.CallerMemberName">
            <summary>
            The member name of the calling / creating method.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.CallerFilePath">
            <summary>
            The file path to the calling / creating class.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.CallerLineNumber">
            <summary>
            The line number of the calling / creating class.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaError.PertinentData">
            <summary>
            Any relevant data to the error message in human readable form;
            such as a file path or URI
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaError.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaError.#ctor(AngelSix.SolidDna.SolidDnaError)">
            <summary>
            Constructor
            </summary>
            <param name="solidDnaError">The error to clone from</param>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaError.ToString">
            <summary>
            Returns a user-friendly string about the error
            </summary>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaErrorCode">
            <summary>
            A list of all known types of error codes in SolidDNA
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.FileUnexpectedError">
            <summary>
            There was an unknown error while accessing a file
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksApplicationError">
            <summary>
            There was an unknown error while running a top level SolidWorks API call on the application
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksApplicationFilePreOpenError">
            <summary>
            There was an error in the event for when a new file is about to be opened
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksApplicationFilePostOpenError">
            <summary>
            There was an error in the event for when a new file has finished opening
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksApplicationActiveModelChangedError">
            <summary>
            There was an error in the event for when the active model has changed
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksApplicationGetMaterialsError">
            <summary>
            There was an error when trying to read the materials databases
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksApplicationGetMaterialsFileNotFoundError">
            <summary>
            There was an error when trying to read the materials databases because the database file does not exist
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksApplicationGetMaterialsFileFormatError">
            <summary>
            There was an error when trying to read the materials databases because the database file was of an unexpected format
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksApplicationFindMaterialsError">
            <summary>
            There was an error when trying to find a material in a materials database file
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksApplicationVersionError">
            <summary>
            There was an error when trying to get the SolidWorks version number
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksTaskpaneError">
            <summary>
            There was an unknown error while running a SolidWorks API call related to the Taskpane
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksTaskpaneCreateError">
            <summary>
            There was an error while running a SolidWorks API call to create a Taskpane
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksTaskpaneAddControlError">
            <summary>
            There was an error while running a SolidWorks API call to add a control to a Taskpane
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksModelError">
            <summary>
            There was an unknown error while running a SolidWorks API call on a SolidWorks model
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksModelGetMaterialError">
            <summary>
            There was an error while trying to get the material on a SolidWorks model
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksModelSetMaterialError">
            <summary>
            There was an error while trying to set the material on a SolidWorks model
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksModelGetMassPropertiesError">
            <summary>
            There was an error while trying to get the mass on a SolidWorks model
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksModelSelectedObjectCastError">
            <summary>
            There was an error casting a selected object to a specific type
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksModelSaveAsError">
            <summary>
            There was an error saving a model using the SaveAs call
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksModelAssemblyGetFeatureByNameError">
            <summary>
            There was an error getting the feature by name from an assembly document
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksModelPartGetFeatureByNameError">
            <summary>
            There was an error getting the feature by name from a part document
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksCommandManagerError">
            <summary>
            There was an unknown error while running a SolidWorks API call related to the Command Manager
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksCommandGroupCreateError">
            <summary>
            There was an error while running a SolidWorks API call to create a Command Group
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksCommandGroupActivateError">
            <summary>
            There was an error while trying to activate a Command Group
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksCommandGroupReActivateError">
            <summary>
            There was an error while trying to activate a Command Group that was already activated
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksCommandGroupGetCommandTabError">
            <summary>
            There was an error while running a SolidWorks API call to get a Command Tab
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksCommandGroupInvalidPathFormatError">
            <summary>
            There was an error while trying to set a Command Group Icon list with an invalid path
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksCommandGroupCreateTabError">
            <summary>
            There was an error while running a SolidWorks API call to create a Command Group Tab
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksCommandFlyoutReActivateError">
            <summary>
            There was an error while trying to activate a Command Group that was already activated
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksExportDataError">
            <summary>
            There was an unknown error while running a SolidWorks API call on an export data object
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksExportDataGetPdfExportDataError">
            <summary>
            There was an error calling SldWorks.GetExportFileData(1) to get the Pdf Export Data
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorCode.SolidWorksExportDataPdfSetSheetsError">
            <summary>
            There was an error calling the SetSheets option on the export data object
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaErrors">
            <summary>
            Provides details and lookups for SolidDNA errors and codes
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaErrors.CreateError(AngelSix.SolidDna.SolidDnaErrorTypeCode,AngelSix.SolidDna.SolidDnaErrorCode,System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:AngelSix.SolidDna.SolidDnaError"/> from the given details
            </summary>
            <param name="errorDetails">Specific details about this exact error</param>
            <param name="errorTypeCode">The error type code of this error</param>
            <param name="errorCode">The specific error code of this error</param>
            <param name="innerException">If an inner exception is supplied, its message is appended to the errorDetails</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaErrors.Wrap(System.Action,AngelSix.SolidDna.SolidDnaErrorTypeCode,AngelSix.SolidDna.SolidDnaErrorCode,System.String)">
            <summary>
            Runs an action and catches any exceptions thrown
            wrapping and rethrowing them as a <see cref="T:AngelSix.SolidDna.SolidDnaException"/>
            </summary>
            <param name="action">The action to run</param>
            <param name="errorTypeCode">The <see cref="T:AngelSix.SolidDna.SolidDnaErrorTypeCode"/> to wrap the exception in</param>
            <param name="errorCode">The <see cref="T:AngelSix.SolidDna.SolidDnaErrorCode"/> to wrap the exception in</param>
            <param name="errorDescription">The description of the error if thrown</param>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaErrors.Wrap``1(System.Func{``0},AngelSix.SolidDna.SolidDnaErrorTypeCode,AngelSix.SolidDna.SolidDnaErrorCode,System.String)">
            <summary>
            Runs a function and catches any exceptions thrown, 
            wrapping and rethrowing them as a <see cref="T:AngelSix.SolidDna.SolidDnaException"/>
            </summary>
            <param name="func">The function to run</param>
            <param name="errorTypeCode">The <see cref="T:AngelSix.SolidDna.SolidDnaErrorTypeCode"/> to wrap the exception in</param>
            <param name="errorCode">The <see cref="T:AngelSix.SolidDna.SolidDnaErrorCode"/> to wrap the exception in</param>
            <param name="errorDescription">The description of the error if thrown</param>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaErrors.WrapAwaitAsync(System.Func{System.Threading.Tasks.Task},AngelSix.SolidDna.SolidDnaErrorTypeCode,AngelSix.SolidDna.SolidDnaErrorCode,System.String)">
            <summary>
            Runs a task and catches any exceptions thrown, 
            wrapping and rethrowing them as a <see cref="T:AngelSix.SolidDna.SolidDnaException"/>
            </summary>
            <param name="task">The task to run</param>
            <param name="errorTypeCode">The <see cref="T:AngelSix.SolidDna.SolidDnaErrorTypeCode"/> to wrap the exception in</param>
            <param name="errorCode">The <see cref="T:AngelSix.SolidDna.SolidDnaErrorCode"/> to wrap the exception in</param>
            <param name="errorDescription">The description of the error if thrown</param>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaErrors.WrapAwaitAsync``1(System.Func{System.Threading.Tasks.Task{``0}},AngelSix.SolidDna.SolidDnaErrorTypeCode,AngelSix.SolidDna.SolidDnaErrorCode,System.String)">
            <summary>
            Runs a task and catches any exceptions thrown
            wrapping and rethrowing them as a <see cref="T:AngelSix.SolidDna.SolidDnaException"/>
            
            Returns the result of the task
            </summary>
            <param name="task">The task to run</param>
            <param name="errorTypeCode">The <see cref="T:AngelSix.SolidDna.SolidDnaErrorTypeCode"/> to wrap the exception in</param>
            <param name="errorCode">The <see cref="T:AngelSix.SolidDna.SolidDnaErrorCode"/> to wrap the exception in</param>
            <param name="errorDescription">The description of the error if thrown</param>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaErrorTypeCode">
            <summary>
            A list of all known types of error type codes in SolidDNA
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorTypeCode.Unknown">
            <summary>
            The error type is not known and likely was not caught anywhere expected
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorTypeCode.Unexpected">
            <summary>
            The error was caught but was not an expected type of error
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorTypeCode.File">
            <summary>
            An error occurred while working with a file on the file system
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorTypeCode.SolidWorksTaskpane">
            <summary>
            An error occurred trying to perform a SolidWorks API call on the Taskpane
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorTypeCode.SolidWorksApplication">
            <summary>
            An error occurred trying to perform a top level SolidWorks API call
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorTypeCode.SolidWorksModel">
            <summary>
            An error occurred trying to perform a SolidWorks API call on a Model
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorTypeCode.SolidWorksCommandManager">
            <summary>
            An error occurred trying to perform a SolidWorks API call on the Command Manager
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaErrorTypeCode.ExportData">
            <summary>
            An error occurred trying to perform a SolidWorks API call on export data
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaException">
            <summary>
            A SolidDNA exception containing specific error codes and details for a <see cref="P:AngelSix.SolidDna.SolidDnaException.SolidDnaError"/>
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaException.SolidDnaError">
            <summary>
            The SolidDNA error details
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaException.InnerException">
            <summary>
            The inner exception details
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaException.#ctor(AngelSix.SolidDna.SolidDnaError,System.Exception)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaException.ToCompositeSolidDnaError">
            <summary>
            Combines the SolidDnaError and InnerException, adding the InnerException message to the SolidDnaError.ErrorDescription
            </summary>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.ExceptionHelpers">
            <summary>
            A set of helper functions related to exceptions
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ExceptionHelpers.TryFinally(System.Action,System.Action)">
            <summary>
            A tidy way to do try { ... } finally { ... }
            </summary>
            <param name="action">The action to perform in the try block</param>
            <param name="final">The action to perform in the finally block</param>
        </member>
        <member name="M:AngelSix.SolidDna.ExceptionHelpers.GetErrorMessage(System.Exception)">
            <summary>
            Combines the exception itself and all inner exceptions into one string 
            so the full details of the error can be easily presented.
            </summary>
            <param name="ex">The exception to retrieve the inner exception details from</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.ExceptionHelpers.Handle(System.Exception,System.String)">
            <summary>
            Handles the exception and logs it to the injected logger
            </summary>
            <param name="ex">The exception</param>
            <param name="source">The source of the exception (usually the method or class name)</param>
        </member>
        <member name="T:AngelSix.SolidDna.FileHelpers">
            <summary>
            A set of helper functions related to File data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FileHelpers.GetFileFolderName(System.String)">
            <summary>
            Gets a file or folder name from a given path.
            If the path does not contain any folders, the passed in path is returned. 
            Otherwise the file/folder name is returned
            </summary>
            <param name="path">The path to get the file/folder name from</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.FileHelpers.CodeBaseNormalized(System.Type)">
            <summary>
            Gets the codebase directory of a type in a normalized format, removing any file: prefixes
            </summary>
            <param name="type">The type to get the codebase from</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.FileHelpers.AssemblyBaseNormalized(System.Type)">
            <summary>
            Gets the assembly base of a type in a normalized format, removing any file: prefixes
            </summary>
            <param name="type">The type to get the assembly base from</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.BaseFormatProvider">
            <summary>
            A base class adding caching ability and helper functions to IResourceFormatProvider implementations
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BaseFormatProvider.mSelfLock">
            <summary>
            A lock to limit access to the processes to one at a time
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BaseFormatProvider.mCache">
            <summary>
            A list of all cached resources
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BaseFormatProvider.mCacheResourceFiles">
            <summary>
            If true, resource files are cached in memory
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.BaseFormatProvider.GetResourceDocumentAsync``1(AngelSix.SolidDna.ResourceDefinition,System.Func{System.IO.Stream,``0},System.String)">
            <summary>
            Gets the file data for the specified resource, storing a cached version if specified.
            IMPORTANT:
            NOTE: Make sure any and all await calls inside this function and its children
                  use ConfigureAwait(false). This is because the parent has to support 
                  a synchronous version of this call, so the method cannot sync back with
                  its calling context without risk of deadlock.
            </summary>
            <param name="pathFormat">The path to the desired resource, containing {0} in place of the culture</param>
            <param name="constructData">The function that takes the file data and converts it into the format required by the provider</param>
            <param name="culture">The culture to use. If not specified, the default culture is used</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.XmlFormatProvider">
            <summary>
            A resource provider that supports XML structured documents
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.XmlFormatProvider.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.XmlFormatProvider.GetStringAsync(AngelSix.SolidDna.ResourceDefinition,System.String,System.String,System.Action{System.String})">
            <summary>
            Finds a string of the given name, taking into account the culture information.
            If no culture is specified, the default culture is used
            
            IMPORTANT:
            NOTE: Make sure any and all await calls inside this function and its children
                  use ConfigureAwait(false). This is because the parent has to support 
                  a synchronous version of this call, so the method cannot sync back with
                  its calling context without risk of deadlock.
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.LocalizationManager">
            <summary>
            A resource manager that supports cross-platform localization
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.LocalizationManager.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.LocalizationManager.GetStringAsync(System.String,System.String)">
            <summary>
            Finds a string of the given name, taking into account the culture information.
            If no culture is specified, the default culture is used
            
            IMPORTANT:
            NOTE: Make sure any and all await calls inside this function and its children
                  use ConfigureAwait(false). This is because the parent has to support 
                  a synchronous version of this call, so the method cannot sync back with
                  its calling context without risk of deadlock.
            </summary>
            <param name="name">The name of the resource to find</param>
            <param name="culture">The culture information to use</param>
            <returns>Returns the string if found, or null if not found</returns>
        </member>
        <member name="T:AngelSix.SolidDna.Localization">
            <summary>
            Static shortcut functions for the LocalizationManager
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Localization.GetStringAsync(System.String,System.String)">
            <summary>
            Gets a string resource
            </summary>
            <param name="name">The name of the string resource to retrieve</param>
            <param name="culture">The culture to use if different than the default</param>
            <returns>Returns the value of the string if found, and null if not found</returns>
        </member>
        <member name="M:AngelSix.SolidDna.Localization.GetString(System.String,System.String)">
            <summary>
            Gets a string resource
            </summary>
            <param name="name">The name of the string resource to retrieve</param>
            <param name="culture">The culture to use if different than the default</param>
            <returns>Returns the value of the string if found, and null if not found</returns>
        </member>
        <member name="T:AngelSix.SolidDna.ResourceDefinitionType">
            <summary>
            The type of resource used in a localization manager
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ResourceDefinitionType.EmbeddedResource">
            <summary>
            The resource is embedded in the assembly
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ResourceDefinitionType.File">
            <summary>
            The resource is on the file system of the application
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ResourceDefinitionType.Url">
            <summary>
            The resource is a remote URL
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ResourceDefinition">
            <summary>
            The definition of a resource used in a localization manager
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ResourceDefinition.Type">
            <summary>
            The type of resource
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ResourceDefinition.ExplicitFormat">
            <summary>
            If set, this is the format of the file. If not specified, the file extension is used
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ResourceDefinition.Location">
            <summary>
            The location of the resource, either an URL, an embedded path or file system path
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ResourceDefinition.UseDefaultCultureIfNotFound">
            <summary>
            If true and no resource file is found for the specified culture,
            the default culture file is used instead
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ResourceFormatProviderHelpers">
            <summary>
            Generic helper functions for any IResourceFormatProviders to use
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ResourceFormatProviderHelpers.GetStreamAsync(AngelSix.SolidDna.ResourceDefinitionType,System.String)">
            <summary>
            Attempts to get a stream from the specified resource type and path
            
            IMPORTANT:
            NOTE: Make sure any and all await calls inside this function and its children
                  use ConfigureAwait(false). This is because the parent has to support 
                  a synchronous version of this call, so the method cannot sync back with
                  it's calling context without risk of deadlock
            </summary>
            <param name="type">The type of resource</param>
            <param name="resourcePath">The location of the resource</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.ResourceFormatProviderHelpers.GetCultureName(System.String)">
            <summary>
            Gets the culture from the specified culture, or resorts to the default culture if not specified 
            </summary>
            <param name="culture">The international standard for the desired culture, such as en-GB, en-US, fr-FR etc...</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.ResourceFormatProviderHelpers.GetCulturePath(System.String,System.String)">
            <summary>
            Takes a formatted path and a culture name and returns the path
            </summary>
            <param name="locationFormat">The path format to the resource</param>
            <param name="culture">The culture to use. If not specified, the default culture will be used</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.ResourceFormatProviderHelpers.GetFormat(AngelSix.SolidDna.ResourceDefinition)">
            <summary>
            Gets the format of this resource
            </summary>
            <param name="resourceDefinition">The resource definition</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.TypeHelpers">
            <summary>
            Helper methods for reflection and types
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.TypeHelpers.IsInterfaceOrHasInterface``1(System.Type)">
            <summary>
            Checks if a type is a specific interface, or inherits it
            </summary>
            <typeparam name="T">The interface to check</typeparam>
            <param name="type">The type to check if it is or inherits the interface</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.AttachAnnotationOption">
            <summary>
            The options for the <see cref="M:AngelSix.SolidDna.DrawingDocument.AttachAnnotation(AngelSix.SolidDna.AttachAnnotationOption)"/> call
            from <see cref="T:SolidWorks.Interop.swconst.swAttachAnnotationOption_e"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.AttachAnnotationOption.Sheet">
            <summary>
            Attaches the selected annotation to the sheet
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.AttachAnnotationOption.View">
            <summary>
            Attaches the selected annotation to the view
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidWorksMessageBoxButtons">
            <summary>
            The type of message box buttons for a SolidWorks message, of type <see cref="T:SolidWorks.Interop.swconst.swMessageBoxBtn_e"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxButtons.AbortRetryIgnore">
            <summary>
            An Abort, Retry and Ignore button
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxButtons.Ok">
            <summary>
            A single OK button
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxButtons.OkCancel">
            <summary>
            An OK and Cancel button
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxButtons.Retry">
            <summary>
            A single Retry button
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxButtons.YesNo">
            <summary>
            A Yes and No button
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxButtons.YesNoCancel">
            <summary>
            A Yes, No and Cancel button
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidWorksMessageBoxIcon">
            <summary>
            The type of message box icon for a SolidWorks message, of type <see cref="T:SolidWorks.Interop.swconst.swMessageBoxIcon_e"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxIcon.Warning">
            <summary>
            A warning icon
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxIcon.Information">
            <summary>
            An information icon
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxIcon.Question">
            <summary>
            A question mark icon
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxIcon.Stop">
            <summary>
            An exclamation icon
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidWorksMessageBoxResult">
            <summary>
            The result for a SolidWorks message, of type <see cref="T:SolidWorks.Interop.swconst.swMessageBoxResult_e"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxResult.Abort">
            <summary>
            Abort was clicked
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxResult.Ignore">
            <summary>
            Ignore was clicked
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxResult.No">
            <summary>
            No was clicked
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxResult.Ok">
            <summary>
            Ok was clicked
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxResult.Retry">
            <summary>
            Retry was clicked
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxResult.Yes">
            <summary>
            Yes was clicked
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksMessageBoxResult.Cancel">
            <summary>
            Cancel was clicked
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidWorksApplication">
            <summary>
            Represents the current SolidWorks application
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksApplication.mSwCookie">
            <summary>
            The cookie to the current instance of SolidWorks we are running inside of
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksApplication.mFileLoading">
            <summary>
            The file path of the current file that is loading. 
            Used to ignore active document changed events during opening of a file
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksApplication.mActiveModel">
            <summary>
            The currently active document
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidWorksApplication.mDisposingLock">
            <summary>
            Locking object for synchronizing the disposing of SolidWorks and reloading active model info.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksApplication.ActiveModel">
            <summary>
            The currently active model
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksApplication.Preferences">
            <summary>
            Various preferences for SolidWorks
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksApplication.SolidWorksVersion">
            <summary>
            Gets the current SolidWorks version information
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksApplication.SolidWorksCookie">
            <summary>
            The SolidWorks instance cookie
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksApplication.CommandManager">
            <summary>
            The command manager
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksApplication.Disposing">
            <summary>
            True if the application is disposing
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.SolidWorksApplication.ActiveModelInformationChanged">
            <summary>
            Called when any information about the currently active model has changed
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.SolidWorksApplication.FileCreated">
            <summary>
            Called when a new file has been created
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.SolidWorksApplication.FileOpened">
            <summary>
            Called when a file has been opened
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.SolidWorksApplication.ActiveFileSaved">
            <summary>
            Called when the currently active file has been saved
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.SolidWorksApplication.Idle">
            <summary>
            Called when SolidWorks is idle
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.#ctor(SolidWorks.Interop.sldworks.SldWorks,System.Int32)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.RequestActiveModelChanged">
            <summary>
            Informs this class that the active model may have changed and it should be reloaded
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.GetSolidWorksVersion">
            <summary>
            Gets the current SolidWorks version information
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.OnIdleNotify">
            <summary>
             Called when SolidWorks is idle
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.FileNewPostNotify(System.Object,System.Int32,System.String)">
            <summary>
            Called after a new file has been created.
            <see cref="P:AngelSix.SolidDna.SolidWorksApplication.ActiveModel"/> is updated to the new file before this event is called.
            </summary>
            <param name="newDocument"></param>
            <param name="documentType"></param>
            <param name="templatePath"></param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.FileOpenPostNotify(System.String)">
            <summary>
            Called after a file has finished opening
            </summary>
            <param name="filename">The filename to the file being opened</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.FileOpenPreNotify(System.String)">
            <summary>
            Called before a file has started opening
            </summary>
            <param name="filename">The filename to the file being opened</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.ActiveModelChanged">
            <summary>
            Called when the active model has changed
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.ReloadActiveModelInformation">
            <summary>
            Reloads all of the variables, data and COM objects for the newly available SolidWorks model/state
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.CleanActiveModelData">
            <summary>
            Disposes of any active model-specific data ready for refreshing
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.ActiveModel_InformationChanged">
            <summary>
            Called when the active model has informed us its information has changed
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.ActiveModel_Closing">
            <summary>
            Called when the active document is closed
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.ActiveModel_Saved">
            <summary>
            Called when the currently active file has been saved
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.GetPdfExportData">
            <summary>
            Gets an <see cref="T:SolidWorks.Interop.sldworks.IExportPdfData"/> object for use with a <see cref="T:AngelSix.SolidDna.PdfExportData"/>
            object used in <see cref="M:AngelSix.SolidDna.Model.SaveAs(System.String,AngelSix.SolidDna.SaveAsVersion,AngelSix.SolidDna.SaveAsOptions,AngelSix.SolidDna.PdfExportData)"/> call
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.GetMaterials(System.String)">
            <summary>
            Gets a list of all materials in SolidWorks
            </summary>
            <param name="database">If specified, limits the results to the specified database full path</param>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.FindMaterial(System.String,System.String)">
            <summary>
            Attempts to find the material from a SolidWorks material database file (SLDMAT)
            If found, returns the full information about the material
            </summary>
            <param name="database">The full path to the database</param>
            <param name="materialName">The material name to find</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.ReadMaterials(System.String,System.Collections.Generic.List{AngelSix.SolidDna.Material}@)">
            <summary>
            Reads the material database and adds the materials to the given list
            </summary>
            <param name="database">The database to read</param>
            <param name="list">The list to add materials to</param>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.GetUserPreferencesDouble(SolidWorks.Interop.swconst.swUserPreferenceDoubleValue_e)">
            <summary>
            Gets the specified user preference value
            </summary>
            <param name="preference">The preference to get</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.SetUserPreferencesDouble(SolidWorks.Interop.swconst.swUserPreferenceDoubleValue_e,System.Double)">
            <summary>
            Sets the specified user preference value
            </summary>
            <param name="preference">The preference to set</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.GetUserPreferencesInteger(SolidWorks.Interop.swconst.swUserPreferenceIntegerValue_e)">
            <summary>
            Gets the specified user preference value
            </summary>
            <param name="preference">The preference to get</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.SetUserPreferencesInteger(SolidWorks.Interop.swconst.swUserPreferenceIntegerValue_e,System.Int32)">
            <summary>
            Sets the specified user preference value
            </summary>
            <param name="preference">The preference to set</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.GetUserPreferencesToggle(SolidWorks.Interop.swconst.swUserPreferenceToggle_e)">
            <summary>
            Gets the specified user preference value
            </summary>
            <param name="preference">The preference to get</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.SetUserPreferencesToggle(SolidWorks.Interop.swconst.swUserPreferenceToggle_e,System.Boolean)">
            <summary>
            Sets the specified user preference value
            </summary>
            <param name="preference">The preference to set</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.CreateTaskpaneAsync(System.String,System.String)">
            <summary>
            Attempts to create 
            </summary>
            <param name="iconPath">An absolute path to an icon to use for the taskpane (ideally 37x37px)</param>
            <param name="toolTip">The title text to show at the top of the taskpane</param>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.ShowMessageBox(System.String,AngelSix.SolidDna.SolidWorksMessageBoxIcon,AngelSix.SolidDna.SolidWorksMessageBoxButtons)">
            <summary>
            Pops up a message box to the user with the given message
            </summary>
            <param name="message">The message to display to the user</param>
            <param name="icon">The severity icon to display</param>
            <param name="buttons">The buttons to display</param>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksApplication.Dispose">
            <summary>
            Disposing
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksApplication.SolidWorksPreferences.DxfOutputScaleFactor">
            <summary>
            The scaling factor used when exporting as DXF
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksApplication.SolidWorksPreferences.DxfMultiSheetOption">
            <summary>
            The scaling factor used when exporting as DXF
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksApplication.SolidWorksPreferences.DxfOutputNoScale">
            <summary>
            The scaling of DXF output. If true no scaling will be done
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidWorksVersion">
            <summary>
            Represents the SolidWorks version and build information
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksVersion.Version">
            <summary>
            The version, such as 2017.
            If unknown will return -1
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksVersion.ServicePackMajor">
            <summary>
            The major service pack number, such as 2 for SP2.0.
            If unknown will return -1
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksVersion.ServicePackMinor">
            <summary>
            The minor service pack number, such as 0 for SP2.0.
            If unknown will return -1
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksVersion.RevisionNumber">
            <summary>
            The raw revision, for example where SolidWorks 2015 SP2.0 is 23.2.0
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksVersion.Revision">
            <summary>
            The raw revision, for example where SolidWorks 2015 SP2.0 is 23.2.0
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksVersion.BuildNumber">
            <summary>
            The raw build number, for example where SolidWorks 2015 SP2.0 it is d150130.002
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksVersion.Hotfix">
            <summary>
            The raw hotfix string
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidWorksVersion.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            SolidWorks version information
            </summary>
            <param name="revisionNumber"></param>
            <param name="revision"></param>
            <param name="buildNumber"></param>
            <param name="hotfix"></param>
        </member>
        <member name="T:AngelSix.SolidDna.AutoBalloonOptions">
            <summary>
            Options for the <see cref="M:AngelSix.SolidDna.DrawingDocument.AutoBalloon(AngelSix.SolidDna.AutoBalloonOptions,System.Action{AngelSix.SolidDna.Note[]})"/> call
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.CustomSize">
            <summary>
            User-defined size of the balloons.
            Valid only when  is set to swBalloonFit_e.swBF_UserDef
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.EditBalloonOptions">
            <summary>
            The edit balloon options. 
            Only valid only if <see cref="P:AngelSix.SolidDna.AutoBalloonOptions.EditBalloons"/> is true
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.EditBalloons">
            <summary>
            Whether to use edit balloon options when creating the auto balloon
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.FirstItem">
            <summary>
            Sets the first balloon item.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.IgnoreMultiple">
            <summary>
            True to create a balloon for only one instance of an item.
            False to create multiple balloons for multiple instances of an item
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.InsertMagnaticLine">
            <summary>
            True to insert magnetic lines, false to not.
            Only valid when <see cref="P:AngelSix.SolidDna.AutoBalloonOptions.Layout"/> is not set to <see cref="F:AngelSix.SolidDna.BalloonLayoutType.Circle"/>
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.ItemNumberIncrement">
            <summary>
            The item number increment
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.ItemNumberStart">
            <summary>
            The starting item number
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.ItemOrder">
            <summary>
            The item ordering
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.LayerName">
            <summary>
            The name of the layer on which to create balloons
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.Layout">
            <summary>
            Style of the balloon layout
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.LeaderAttachmentToFaces">
            <summary>
            True to attach balloons to faces. 
            False to attach balloons to edges
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.LowerText">
            <summary>
            The lower text of the balloons
            </summary>
            <remarks>
                This property is valid only when <see cref="P:AngelSix.SolidDna.AutoBalloonOptions.Style"/> is set
                to <see cref="F:AngelSix.SolidDna.BalloonStyle.Circular"/>.
                You can only get or set the lower text in a BOM balloon 
                using <see cref="M:AngelSix.SolidDna.Note.GetBOMBalloonLowerText"/> or 
                <see cref="M:AngelSix.SolidDna.Note.SetBOMBalloonText(AngelSix.SolidDna.NoteTextContent,System.String,AngelSix.SolidDna.NoteTextContent,System.String)"/> 
                after inserting a BOM balloon.
            </remarks>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.LowerTextContent">
            <summary>
            Style of the lower text
            </summary>
            <remarks>
                This property is valid only when <see cref="P:AngelSix.SolidDna.AutoBalloonOptions.Style"/> is set 
                to <see cref="F:AngelSix.SolidDna.BalloonStyle.SplitCircle"/>
            </remarks>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.ReverseDirection">
            <summary>
            True to reverse the item ordering, false to not.
            Only valid when <see cref="P:AngelSix.SolidDna.AutoBalloonOptions.ItemOrder"/> is set to 
            <see cref="F:AngelSix.SolidDna.BalloonItemNumberOrder.OrderSequentially"/>
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.Size">
            <summary>
            The size of the balloon
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.Style">
            <summary>
            Style of the balloon
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.UpperText">
            <summary>
            The upper text of the balloons
            </summary>
            <remarks>
                You can only get or set the upper text in a BOM balloon using 
                <see cref="M:AngelSix.SolidDna.Note.GetBOMBalloonUpperText"/> or 
                <see cref="M:AngelSix.SolidDna.Note.SetBOMBalloonText(AngelSix.SolidDna.NoteTextContent,System.String,AngelSix.SolidDna.NoteTextContent,System.String)"/> 
                after inserting a BOM balloon.
            </remarks>
        </member>
        <member name="P:AngelSix.SolidDna.AutoBalloonOptions.UpperTextContent">
            <summary>
            Style of the upper text
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.BalloonFitSize">
            <summary>
            Types of balloon and label location fits
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonFitSize.Tightest">
            <summary>
            Tightest fit (not available for a label location)
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonFitSize.Character1">
            <summary>
            Fits a single character
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonFitSize.Character2">
            <summary>
            Fits 2 characters
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonFitSize.Character3">
            <summary>
            Fits 3 characters
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonFitSize.Character4">
            <summary>
            Fits 4 characters
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonFitSize.Character5">
            <summary>
            Fits 5 characters
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonFitSize.UserDefined">
            <summary>
            Size defined by <see cref="P:AngelSix.SolidDna.AutoBalloonOptions.CustomSize"/>
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.BalloonItemNumberOrder">
            <summary>
            Balloon item ordering options
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonItemNumberOrder.DoNotChangeItemNumbers">
            <summary>
            Do not change the item numbers
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonItemNumberOrder.FollowAssemblyOrder">
            <summary>
            Follow the same order as the assembly
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonItemNumberOrder.OrderSequentially">
            <summary>
            Order sequentially
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.BalloonLayoutType">
            <summary>
            Arrangements for automatic BOM balloons in relation to the drawing views
            with which they are associated
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonLayoutType.DocumentDefault">
            <summary>
            Use the document layout default
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonLayoutType.Square">
            <summary>
            In a box around the drawing view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonLayoutType.Circle">
            <summary>
            In a circle around the drawing view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonLayoutType.Top">
            <summary>
            Along the top edge of the drawing view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonLayoutType.Bottom">
            <summary>
            Along the bottom edge of the drawing view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonLayoutType.Right">
            <summary>
            Along the right edge of the drawing view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonLayoutType.Left">
            <summary>
            Along the left edge of the drawing view
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.BalloonStyle">
            <summary>
            The style of a balloon
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.DocumentDefault">
            <summary>
            Use the document layout default
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Circular">
            <summary>
            Circular
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Triangle">
            <summary>
            Triangle
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Hexagon">
            <summary>
            Hexagon
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Box">
            <summary>
            Box
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Diamond">
            <summary>
            Diamond
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Pentagon">
            <summary>
            Pentagon. Can be used for label location selection Circular Spit Line
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.SplitCircle">
            <summary>
            Split circle. Not valid for notes; only valid for balloons
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.FlagPentagon">
            <summary>
            Flag pentagon
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.FlagTriangle">
            <summary>
            Flag triangle
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Underline">
            <summary>
            Underline
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.SquareCircle">
            <summary>
            Square circle
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Inspection">
            <summary>
            Inspection
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.ArcBracket">
            <summary>
            Arc bracket
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.RectangleBracket">
            <summary>
            Rectangle bracket
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.ArcLengthSymbol">
            <summary>
            Arc length symbol
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.FixedSymbol">
            <summary>
            Fixed symbol
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.DoubleArrow">
            <summary>
            Double arrow
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.SplitSquare">
            <summary>
            Split square. Can be used for label location selection Square Spit Line
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonStyle.Verbose">
            <summary>
            Verbose
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.BalloonTextContent">
            <summary>
            Style of the text contents of balloon notes
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.DocumentDefault">
            <summary>
            Use the document layout default
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.Custom">
            <summary>
            Custom text
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.ItemNumber">
            <summary>
            Item number
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.CustomProperties">
            <summary>
            Custom properties
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.ComponentReference">
            <summary>
            Component reference
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.SpoolReference">
            <summary>
            Spool reference
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.PartNumberBOM">
            <summary>
            Part number BOM
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.FileName">
            <summary>
            File name
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.CutlistProperties">
            <summary>
            Cutlist properties
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.ViewSheet">
            <summary>
            View sheet
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.ViewSheetWithLabel">
            <summary>
            View sheet with label
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.ViewZone">
            <summary>
            View zone
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.BalloonTextContent.ViewLetter">
            <summary>
            View letter
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.EditBalloonOptions">
            <summary>
            Options for the <see cref="!:AutoBalloonOptions.EditBalloonOption"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.EditBalloonOptions.Replace">
            <summary>
            Replaces existing balloons
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.EditBalloonOptions.Resequence">
            <summary>
            Re-sequences existing balloons
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManager.mCommandGroups">
            <summary>
            A list of all created command groups
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManager.mCommandFlyouts">
            <summary>
            A list of all created command flyouts
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManager.mFlyoutIdCount">
            <summary>
            Unique Id for flyouts (just increment every time we add one)
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManager.mIconSizes">
            <summary>
            List of icon sizes used by SOLIDWORKS. Icons are square, so these values are both width and height.
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManager.#ctor(SolidWorks.Interop.sldworks.ICommandManager)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManager.CreateCommandGroupAndTabs(System.String,System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerItem},System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerFlyout},System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a command group from a list of <see cref="T:AngelSix.SolidDna.CommandManagerItem"/> items
            </summary>
            <param name="title">Name of the CommandGroup to create (see Remarks)</param>
            <param name="items">The command items to add</param>
            <param name="flyoutItems">The flyout command items that contain a list of other commands</param>
            <param name="iconListsPath">The icon list absolute path based on a string format of the absolute path to the icon list images, replacing {0} with the size. 
                For example C:\Folder\myiconlist{0}.png</param>
            <param name="tooltip">Tool tip for the CommandGroup</param>
            <param name="hint">Text displayed in SOLIDWORKS status bar when a user's mouse pointer is over the CommandGroup</param>
            <param name="position">Position of the CommandGroup in the CommandManager for all document templates.
            NOTE: Specify 0 to add the CommandGroup to the beginning of the CommandManager, or specify -1 to add it to the end of the CommandManager.
            NOTE: You can also use ICommandGroup::MenuPosition to control the position of the CommandGroup in specific document templates.</param>
            <param name="ignorePreviousVersion">True to remove all previously saved customization and toolbar information before creating a new CommandGroup, false to not.
            Call CommandManager.GetGroupDataFromRegistry before calling this method to determine how to set IgnorePreviousVersion. Set IgnorePreviousVersion to true to prevent SOLIDWORKS from saving the current toolbar setting to the registry, even if there is no previous version.</param>
            <param name="hasMenu">Whether the CommandGroup should appear in the Tools dropdown menu.</param>
            <param name="hasToolbar">Whether the CommandGroup should appear in the Command Manager and as a separate toolbar.</param>
            <param name="addDropdownBoxForParts">If true, adds a command box to the toolbar for parts that has a dropdown of all commands that are part of this group. The tooltip of the command group is used as the name.</param>
            <param name="addDropdownBoxForAssemblies">If true, adds a command box to the toolbar for assemblies that has a dropdown of all commands that are part of this group. The tooltip of the command group is used as the name.</param>
            <param name="addDropdownBoxForDrawings">If true, adds a command box to the toolbar for drawings that has a dropdown of all commands that are part of this group. The tooltip of the command group is used as the name.</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManager.CreateFlyoutGroup(System.String,System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerItem},System.String,System.String,System.String)">
            <summary>
            Create a command group flyout containing a list of <see cref="T:AngelSix.SolidDna.CommandManagerItem"/> items
            </summary>
            <param name="title">Name of the flyout to create</param>
            <param name="items">The command items to add</param>
            <param name="pathFormat">The icon list absolute path based on a string format of the absolute path to the icon list images, replacing {0} with the size. 
                For example C:\Folder\myiconlist{0}.png</param>
            <param name="tooltip">Tool tip for the new flyout</param>
            <param name="hint">Text displayed in SOLIDWORKS status bar when a user's mouse pointer is over the flyout</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManager.CreateCommandGroup(System.String,System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerItem},System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerFlyout},System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a command group
            </summary>
            <param name="title">The title</param>
            <param name="items">The command items to add</param>
            <param name="flyoutItems">The flyout command items that contain a list of other commands</param>
            <param name="tooltip">The tool tip</param>
            <param name="hint">The hint</param>
            <param name="position">Position of the CommandGroup in the CommandManager for all document templates.
            NOTE: Specify 0 to add the CommandGroup to the beginning of the CommandManager, or specify -1 to add it to the end of the CommandManager.
            NOTE: You can also use ICommandGroup::MenuPosition to control the position of the CommandGroup in specific document templates.</param>
            <param name="ignorePreviousVersion">True to remove all previously saved customization and toolbar information before creating a new CommandGroup, false to not.
                Call CommandManager.GetGroupDataFromRegistry before calling this method to determine how to set IgnorePreviousVersion.
                Set IgnorePreviousVersion to true to prevent SOLIDWORKS from saving the current toolbar setting to the registry, even if there is no previous version.</param>
            <param name="hasMenu">Whether the CommandGroup should appear in the Tools dropdown menu.</param>
            <param name="hasToolbar">Whether the CommandGroup should appear in the Command Manager and as a separate toolbar.</param>
            <param name="addDropdownBoxForParts">If true, adds a command box to the toolbar for parts that has a dropdown of all commands that are part of this group. The tooltip of the command group is used as the name.</param>
            <param name="addDropdownBoxForAssemblies">If true, adds a command box to the toolbar for assemblies that has a dropdown of all commands that are part of this group. The tooltip of the command group is used as the name.</param>
            <param name="addDropdownBoxForDrawings">If true, adds a command box to the toolbar for drawings that has a dropdown of all commands that are part of this group. The tooltip of the command group is used as the name.</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManager.RemoveCommandFlyout(AngelSix.SolidDna.CommandManagerFlyout)">
            <summary>
            Removes the specific command flyout
            </summary>
            <param name="flyout">The command flyout to remove</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManager.RemoveCommandGroup(AngelSix.SolidDna.CommandManagerGroup,System.Boolean)">
            <summary>
            Removes the specific command group
            </summary>
            <param name="group">The command group to remove</param>
            <param name="runtimeOnly">True to remove the CommandGroup, saving its toolbar information in the registry. False to remove both the CommandGroup and its toolbar information in the registry</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManager.GetCommandTab(AngelSix.SolidDna.ModelType,System.String,System.Boolean,System.Boolean)">
            <summary>
            Get's the command tab for this 
            </summary>
            <param name="type">The type of document to get the tab for. Use only Part, Assembly or Drawing one at a time, otherwise the first found tab gets returned</param>
            <param name="title">The title of the command tab to get</param>
            <param name="createIfNotExist">True to create the tab if it does not exist</param>
            <param name="clearExistingItems">Removes any existing items on the tab if true</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.CommandManagerFlyout">
            <summary>
            A command flyout for the top command bar in SolidWorks
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.UserId">
            <summary>
            The Id used when this command flyout was created
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.CallbackId">
            <summary>
            The unique Callback ID (set by creator)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.Title">
            <summary>
            The title of this command group
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.Hint">
            <summary>
            The hint of this command group
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.Tooltip">
            <summary>
            The tooltip of this command group
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.Items">
            <summary>
            The command items to add to this flyout
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.CommandId">
            <summary>
            The command Id for this flyout item
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.TabView">
            <summary>
            The tab view style (whether and how to show in the large icon tab bar view)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.VisibleForParts">
            <summary>
            True to show this item in the command tab when a part is open
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.VisibleForAssemblies">
            <summary>
            True to show this item in the command tab when an assembly is open
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.VisibleForDrawings">
            <summary>
            True to show this item in the command tab when a drawing is open
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerFlyout.OnClick">
            <summary>
            The action to call when the item is clicked
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerFlyout.#ctor(SolidWorks.Interop.sldworks.IFlyoutGroup,System.Int32,System.String,System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerItem},System.String,System.String,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="flyoutGroup">The SolidWorks command manager flyout group</param>
            <param name="callbackId">The unique callback ID</param>
            <param name="items">The command items to add</param>
            <param name="title">The title</param>
            <param name="hint">The hint</param>
            <param name="tooltip">The tool tip</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerFlyout.PlugInIntegration_CallbackFired(System.String)">
            <summary>
            Fired when a SolidWorks callback is fired
            </summary>
            <param name="name">The name of the callback that was fired</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerFlyout.AddCommandItem(AngelSix.SolidDna.CommandManagerItem)">
            <summary>
            Adds a command item to the group
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerFlyout.Dispose">
            <summary>
            Disposing
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.CommandManagerGroup">
            <summary>
            A command group for the top command bar in SolidWorks
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManagerGroup.mCreated">
            <summary>
            Keeps track if this group has been created already
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManagerGroup.mIconListPaths">
            <summary>
            A dictionary with all icon sizes and their paths.
            Entries are only added when path exists.
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManagerGroup.mIconSizes">
            <summary>
            List of icon sizes used by SOLIDWORKS. Icons are square, so these values are both width and height.
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManagerGroup.mTabs">
            <summary>
            A list of all tabs that have been created
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.UserId">
            <summary>
            The Id used when this command group was created
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.Title">
            <summary>
            The title of this command group
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.Hint">
            <summary>
            The hint of this command group
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.Tooltip">
            <summary>
            The tooltip of this command group
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.AddDropdownBoxForParts">
            <summary>
            If true, adds a command box to the toolbar for parts that has a dropdown
            of all commands that are part of this group. The tooltip of the command 
            group is used as the name.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.AddDropdownBoxForAssemblies">
            <summary>
            If true, adds a command box to the toolbar for assemblies that has a dropdown
            of all commands that are part of this group. The tooltip of the command 
            group is used as the name.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.AddDropdownBoxForDrawings">
            <summary>
            If true, adds a command box to the toolbar for drawings that has a dropdown
            of all commands that are part of this group. The tooltip of the command 
            group is used as the name.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.MenuVisibleInDocumentTypes">
            <summary>
            The type of documents to show this command group in as a menu
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.HasMenu">
            <summary>
            Whether this command group has a Menu.
            NOTE: The menu is the regular drop-down menu like File, Edit, View etc...
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.HasToolbar">
            <summary>
            Whether this command group has a Toolbar.
            NOTE: The toolbar is the small icons like the top-left SolidWorks menu New, Save, Open etc...
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.Items">
            <summary>
            The command items to add to this group
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerGroup.Flyouts">
            <summary>
            The command flyouts to add to this group
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerGroup.#ctor(SolidWorks.Interop.sldworks.ICommandGroup,System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerItem},System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerFlyout},System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="commandGroup">The SolidWorks command group</param>
            <param name="items">The command items to add</param>
            <param name="flyoutItems">The flyout command items that contain a list of other commands</param>
            <param name="userId">The unique Id this group was assigned with when created</param>
            <param name="title">The title</param>
            <param name="hint">The hint</param>
            <param name="tooltip">The tool tip</param>
            <param name="hasMenu">Whether the CommandGroup should appear in the Tools dropdown menu.</param>
            <param name="hasToolbar">Whether the CommandGroup should appear in the Command Manager and as a separate toolbar.</param>
            <param name="addDropdownBoxForParts">If true, adds a command box to the toolbar for parts that has a dropdown of all commands that are part of this group. The tooltip of the command group is used as the name.</param>
            <param name="addDropdownBoxForAssemblies">If true, adds a command box to the toolbar for assemblies that has a dropdown of all commands that are part of this group. The tooltip of the command group is used as the name.</param>
            <param name="addDropdownBoxForDrawings">If true, adds a command box to the toolbar for drawings that has a dropdown of all commands that are part of this group. The tooltip of the command group is used as the name.</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerGroup.GetIconListPaths">
            <summary>
            The list of full paths to a bmp or png's that contains the icon list 
            from first in the list being the smallest, to last being the largest
            NOTE: Supported sizes for each icon in an array is 20x20, 32x32, 40x40, 64x64, 96x96 and 128x128
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerGroup.SetIconLists(System.String)">
            <summary>
            Sets all icon lists based on a string format of the absolute path to the icon list images, replacing {0} with the size.
            For example C:\Folder\myiconlist{0}.png would look for all sizes such as
            C:\Folder\myiconlist20.png
            C:\Folder\myiconlist32.png
            C:\Folder\myiconlist40.png
            ... and so on
            </summary>
            <param name="pathFormat">The absolute path, with {0} used to replace with the icon size</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerGroup.PlugInIntegration_CallbackFired(System.String)">
            <summary>
            Fired when a SolidWorks callback is fired
            </summary>
            <param name="name">The name of the callback that was fired</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerGroup.AddCommandItem(AngelSix.SolidDna.CommandManagerItem)">
            <summary>
            Adds a command item to the group
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerGroup.Create(AngelSix.SolidDna.CommandManager)">
            <summary>
            Creates the command group based on its current children
            NOTE: Once created, parent command manager must remove and re-create the group
            This group cannot be re-used after creating, any edits will not take place
            </summary>
            <param name="manager">The command manager that is our owner</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerGroup.AddItemsToTab(AngelSix.SolidDna.ModelType,AngelSix.SolidDna.CommandManager,System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerItem},System.Collections.Generic.List{AngelSix.SolidDna.CommandManagerFlyout},System.String)">
            <summary>
            Adds all <see cref="P:AngelSix.SolidDna.CommandManagerGroup.Items"/> to the command tab of the given title and model type
            </summary>
            <param name="type">The tab for this type of model</param>
            <param name="manager">The command manager</param>
            <param name="items">Items to add</param>
            <param name="items">Flyout Items to add</param>
            <param name="title">The title of the tab</param>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerGroup.Dispose">
            <summary>
            Disposing
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.CommandItemType">
            <summary>
            The type of command item in the <see cref="T:SolidWorks.Interop.swconst.swCommandItemType_e"/> 
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandItemType.MenuItem">
            <summary>
            The item is a menu item
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandItemType.ToolbarItem">
            <summary>
            The item is a toolbar item
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.CommandManagerItem">
            <summary>
            A command item for the top command bar in SolidWorks
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.UniqueId">
            <summary>
            The unique Id of this item (set by the parent)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.CommandId">
            <summary>
            The command Id of this item (set by the parent)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.CallbackId">
            <summary>
            The unique Id used for identifying a callback that should be associated with this item
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.Name">
            <summary>
            The name of the item
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.Position">
            <summary>
            The position of the item in the list.
            NOTE: Specify 0 to add the CommandGroup to the beginning of the CommandManager, or specify -1 to add it to the end of the CommandManager.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.Hint">
            <summary>
            The hint to show for this item
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.Tooltip">
            <summary>
            The tooltip to show for this item
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.ImageIndex">
            <summary>
            The index position of the image to use for this item from the parent image list (zero-index)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.ItemType">
            <summary>
            The type of item this is, such as a menu item or a toolbar item or both
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.TabView">
            <summary>
            The tab view style (whether and how to show in the large icon tab bar view)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.VisibleForParts">
            <summary>
            True to show this item in the command tab when a part is open
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.VisibleForAssemblies">
            <summary>
            True to show this item in the command tab when an assembly is open
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.VisibleForDrawings">
            <summary>
            True to show this item in the command tab when a drawing is open
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.OnClick">
            <summary>
            The action to call when the item is clicked
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerItem.AddToTab">
            <summary>
            True if the command should be added to the tab
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.CommandManagerItemTabView">
            <summary>
            The view style of a <see cref="T:AngelSix.SolidDna.CommandManagerItem"/> for a Tab (the large icons above opened files).
            References <see cref="T:SolidWorks.Interop.swconst.swCommandTabButtonTextDisplay_e"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManagerItemTabView.None">
            <summary>
            The item is not shown in the tab
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManagerItemTabView.IconOnly">
            <summary>
            The item is shown with an icon only
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManagerItemTabView.IconWithTextBelow">
            <summary>
            The item is shown with the icon, then the text below it
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CommandManagerItemTabView.IconWithTextAtRight">
            <summary>
            The item is shown with the icon then the text to the right
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.CommandManagerTab">
            <summary>
            A command manager tab for the top command group in SolidWorks
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerTab.Box">
            <summary>
            The command tab box for this tab
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerTab.#ctor(SolidWorks.Interop.sldworks.ICommandTab)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerTab.Dispose">
            <summary>
            Disposing
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.CommandManagerTabBox">
            <summary>
            A box for a command manager tab in SolidWorks
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CommandManagerTabBox.#ctor(SolidWorks.Interop.sldworks.ICommandTabBox)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.CommandManagerTabKey">
            <summary>
            A key to uniquely identify a command tab
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerTabKey.Title">
            <summary>
            The title of the tab
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CommandManagerTabKey.ModelType">
            <summary>
            The model type for this tab 
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SharedSolidDnaObject`1">
            <summary>
            Represents a core SolidDNA object, that is disposable
            and needs a COM object disposing cleanly on disposal
            
            NOTE: Use this shared type if another part of the application may have access to this
                  same COM object and the life-cycle for each reference is managed independently
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SharedSolidDnaObject`1.#ctor(`0)">
            <summary>
            Default constructor
            </summary>
            <param name="comObject">The COM object to wrap</param>
        </member>
        <member name="M:AngelSix.SolidDna.SharedSolidDnaObject`1.Dispose">
            <summary>
            Disposal
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaObject">
            <summary>
            Represents a core SolidDNA object, that is disposable
            and needs a COM object disposing cleanly on disposal
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SolidDnaObject.mBaseObject">
            <summary>
            A COM objects that should be cleanly disposed on disposing
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaObject.UnsafeObject">
            <summary>
            The raw underlying COM object
            WARNING: Use with caution. You must handle all disposal from this point on
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaObject`1">
            <summary>
            Represents a core SolidDNA object, that is disposable
            and needs a COM object disposing cleanly on disposal
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaObject`1.BaseObject">
            <summary>
            A COM objects that should be cleanly disposed on disposing
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaObject`1.UnsafeObject">
            <summary>
            The raw underlying COM object
            WARNING: Use with caution. You must handle all disposal from this point on
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaObject`1.#ctor(`0)">
            <summary>
            Default constructor
            </summary>
            <param name="comObject">The COM object to wrap</param>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaObject`1.Dispose">
            <summary>
            Disposal
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaObjectExtensions">
            <summary>
            Extension method helpers for <see cref="T:AngelSix.SolidDna.SolidDnaObject`1"/>
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidDnaObjectExtensions.CreateOrNull``1(``0)">
            <summary>
            Checks if the inner COM object is null. If so, returns null instead of 
            the created safe <see cref="T:AngelSix.SolidDna.SolidDnaObject"/> object
            </summary>
            <typeparam name="T">The type of SolidDnaObject object being created</typeparam>
            <param name="createdObject">The instance that was created</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaObjectDisposal">
            <summary>
            Handles SolidWorks-specific COM disposal based on the type of object
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.CustomProperty">
            <summary>
            A custom property of a model that can be edit directly
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.CustomProperty.mEditor">
            <summary>
            The editor used for this custom property
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CustomProperty.Name">
            <summary>
            The name of the custom property
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CustomProperty.Value">
            <summary>
            The value of the custom property
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.CustomProperty.ResolvedValue">
            <summary>
            The resolved value of the custom property
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CustomProperty.#ctor(AngelSix.SolidDna.CustomPropertyEditor,System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CustomProperty.Delete">
            <summary>
            Deletes this custom property
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.CustomPropertyEditor">
            <summary>
            Represents a SolidWorks custom property manager for a model
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CustomPropertyEditor.#ctor(SolidWorks.Interop.sldworks.CustomPropertyManager)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.CustomPropertyEditor.CustomPropertyExists(System.String)">
            <summary>
            Checks if a custom property exists
            </summary>
            <param name="name">The name of the custom property</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.CustomPropertyEditor.GetCustomProperty(System.String,System.Boolean)">
            <summary>
            Gets the value of a custom property by name
            </summary>
            <param name="name">The name of the custom property</param>
            <param name="resolve">True to resolve the custom property value</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.CustomPropertyEditor.SetCustomProperty(System.String,System.String,SolidWorks.Interop.swconst.swCustomInfoType_e)">
            <summary>
            Sets the value of a custom property by name
            </summary>
            <param name="name">The name of the custom property</param>
            <param name="value">The value of the custom property</param>
            <param name="type">The type of the custom property</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.CustomPropertyEditor.DeleteCustomProperty(System.String)">
            <summary>
            Deletes a custom property by name
            </summary>
            <param name="name">The name of the custom property</param>
        </member>
        <member name="M:AngelSix.SolidDna.CustomPropertyEditor.GetCustomProperties">
            <summary>
            Gets a list of all custom properties
            </summary>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.ModelDisplayDimension">
            <summary>
            Represents a SolidWorks Display Dimension
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelDisplayDimension.SelectionName">
            <summary>
            The selection name for this dimension that can be used to select it.
            For example D1@Sketch1
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ModelDisplayDimension.#ctor(SolidWorks.Interop.sldworks.IDisplayDimension)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidWorksEnvironment">
            <summary>
            A class providing shorthand access to commonly used values
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidWorksEnvironment.Application">
            <summary>
            The currently running instance of SolidWorks
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.AddInIntegration">
            <summary>
            Integrates into SolidWorks as an add-in and registers for callbacks provided by SolidWorks
            
            IMPORTANT: The class that overrides <see cref="T:SolidWorks.Interop.swpublished.ISwAddin"/> MUST be the same class that 
            contains the ComRegister and ComUnregister functions due to how SolidWorks loads add-ins
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.AddInIntegration.mReferencedAssemblies">
            <summary>
            A list of assemblies to use when resolving any missing references
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AddInIntegration.SolidWorksAddInTitle">
            <summary>
            The title displayed for this SolidWorks Add-in
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AddInIntegration.SolidWorksAddInDescription">
            <summary>
            The description displayed for this SolidWorks Add-in
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AddInIntegration.SolidWorks">
            <summary>
            Represents the current SolidWorks application
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AddInIntegration.ReferencedAssemblies">
            <summary>
            Gets the list of all known reference assemblies in this solution
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.AddInIntegration.ConnectedToSolidWorks">
            <summary>
            Called once SolidWorks has loaded our add-in and is ready.
            Now is a good time to create taskpanes, menu bars or anything else.
             
            NOTE: This call will be made twice, one in the default domain and one in the AppDomain as the SolidDna plug-ins
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.AddInIntegration.DisconnectedFromSolidWorks">
            <summary>
            Called once SolidWorks has unloaded our add-in.
            Now is a good time to clean up taskpanes, menu bars or anything else.
            
            NOTE: This call will be made twice, one in the default domain and one in the AppDomain as the SolidDna plug-ins
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.#ctor(System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="standAlone">
                If true, sets the SolidWorks Application to the active instance
                (if available) so the environment can be used from a stand alone application.
            </param>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.ApplicationStartup">
            <summary>
            Specific application startup code when SolidWorks is connected 
            and before any plug-ins or listeners are informed
            
            NOTE: This call will not be in the same AppDomain as the SolidDna plug-ins
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.PreConnectToSolidWorks">
            <summary>
            Run immediately when <see cref="M:AngelSix.SolidDna.AddInIntegration.ConnectToSW(System.Object,System.Int32)"/> is called
            to do any pre-setup such as <see cref="P:AngelSix.SolidDna.PlugInIntegration.UseDetachedAppDomain"/>
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.PreLoadPlugIns">
            <summary>
            Run before loading plug-ins.
            This call should be used to add plug-ins to be loaded, via <see cref="M:AngelSix.SolidDna.PlugInIntegration.AddPlugIn``1"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.ConfigureServices(Dna.FrameworkConstruction)">
            <summary>
            Add any dependency injection items into the DI provider that you would like to use in your application
            </summary>
            <param name="construction"></param>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.Callback(System.String)">
            <summary>
            Used to pass a callback message onto our plug-ins
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.ConnectToSW(System.Object,System.Int32)">
            <summary>
            Called when SolidWorks has loaded our add-in and wants us to do our connection logic
            </summary>
            <param name="thisSw">The current SolidWorks instance</param>
            <param name="cookie">The current SolidWorks cookie Id</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.DisconnectFromSW">
            <summary>
            Called when SolidWorks is about to unload our add-in and wants us to do our disconnection logic
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.OnConnectedToSolidWorks">
            <summary>
            When the add-in has connected to SolidWorks
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.OnDisconnectedFromSolidWorks">
            <summary>
            When the add-in has disconnected to SolidWorks
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.ComRegister(System.Type)">
            <summary>
            The COM registration call to add our registry entries to the SolidWorks add-in registry
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.ComUnregister(System.Type)">
            <summary>
            The COM unregister call to remove our custom entries we added in the COM register function
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.ConnectToActiveSolidWork">
            <summary>
            Attempts to set the SolidWorks property to the active SolidWorks instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.ConnectToActiveSolidWorks">
            <summary>
            Attempts to set the SolidWorks property to the active SolidWorks instance.
            Remember to call <see cref="M:AngelSix.SolidDna.AddInIntegration.TearDown"/> once done.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.AddReferenceAssemblies``1">
            <summary>
            Adds any reference assemblies to the assemblies that get resolved when loading assemblies
            based on the reference type. To add all references from a project, pass in any type that is
            contained in the project as the reference type
            </summary>
            <typeparam name="ReferenceType">The type contained in the assembly where the references are</typeparam>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.CurrentDomain_AssemblyResolve(System.Object,System.ResolveEventArgs)">
            <summary>
            Attempts to resolve missing assemblies based on a list of known references
            primarily from SolidDna and the Add-in project itself
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.AddInIntegration.TearDown">
            <summary>
            Cleans up the SolidWorks instance
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.BlankAddInIntegration">
            <summary>
            Creates a blank AddIn integration class
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.BlankAddInIntegration.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.PlugInDetails">
            <summary>
            Contains details about a SolidDna plug-in to be loaded
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PlugInDetails.FullPath">
            <summary>
            The absolute path to the plug-in dll
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PlugInDetails.AssemblyFullName">
            <summary>
            The fully qualified name of the assembly, such as SolidDna.MyAssembly, ...
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PlugInDetails.TypeFullName">
            <summary>
            The type that implements the <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> in this assembly
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SolidPlugIn">
            <summary>
            An base class to implement to become a SolidDna plug-in. 
            The compiled dll of SolidDna must be in the same location as 
            the plug-in dll to be discovered
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidPlugIn.AddInTitle">
            <summary>
            Gets the desired title to show in the SolidWorks add-in
            </summary>
            <returns></returns>
        </member>
        <member name="P:AngelSix.SolidDna.SolidPlugIn.AddInDescription">
            <summary>
            Gets the desired description to show in the SolidWorks add-in
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidPlugIn.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidPlugIn.ConnectedToSolidWorks">
            <summary>
            Called when the add-in is loaded into SolidWorks and connected
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.SolidPlugIn.DisconnectedFromSolidWorks">
            <summary>
            Called when the add-in is unloaded from SolidWorks and disconnected
            </summary>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.SolidPlugIn`1">
            <summary>
            An base class to implement to become a SolidDna plug-in. 
            The compiled dll of SolidDna must be in the same location as 
            the plug-in dll to be discovered
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SolidPlugIn`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ComRegisterAddInIntegration">
            <summary>
            A basic implementation of the AddIn Integration class used when registering the dll for COM.
            Mainly used for setting up DI so when loading the PlugIn's they have the expected services
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ITaskpaneControl">
            <summary>
            A user control that is to be used as a UI control inside the SolidWorks Taskpane
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ITaskpaneControl.ProgId">
            <summary>
            The unique ProgId of this control
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.PlugInIntegration">
            <summary>
            Provides functions related to SolidDna plug-ins
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.PlugInIntegration.PlugInAppDomain">
            <summary>
            The AppDomain used to load and unload plug-ins
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.PlugInIntegration.PlugIns">
            <summary>
            A list of available plug-ins loaded once SolidWorks has connected
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PlugInIntegration.UseDetachedAppDomain">
            <summary>
            If true, will load your Add-in dll in its own application domain so you can 
            unload and rebuild your add-in without having to close SolidWorks
            NOTE: This does seem to expose some bugs and issues in SolidWorks API
                  in terms of resolving references to specific dll's, so if you experience
                  issues try turning this off
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PlugInIntegration.AssembliesToResolve">
            <summary>
            A list of assembly full names to resolve across domains, excluding anything else that may be found in <see cref="P:AngelSix.SolidDna.PlugInIntegration.PlugInDetails"/>
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PlugInIntegration.PlugInDetails">
            <summary>
            A list of all plug-ins that have been added to be loaded. 
            The key is the absolute file path, and the Type is the <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> implementation type
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PlugInIntegration.PluginCrossDomain">
            <summary>
            The cross-domain marshal to use for the plug-in Application domain calls
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PlugInIntegration.AutoDiscoverPlugins">
            <summary>
            If true, searches in the directory of the application (where AngelSix.SolidDna.dll is) for any dll that
            contains any <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> implementations and adds them to the <see cref="P:AngelSix.SolidDna.PlugInIntegration.PlugInDetails"/>
            during the <see cref="M:AngelSix.SolidDna.PlugInIntegration.ConfigurePlugIns(System.String)"/> stage.
            If false, the user should during the <see cref="M:AngelSix.SolidDna.AddInIntegration.PreLoadPlugIns"/> method, add
            any specific implementations of the <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> to <see cref="P:AngelSix.SolidDna.PlugInIntegration.PlugInDetails"/> list
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.PlugInIntegration.CallbackFired">
            <summary>
            Called when a SolidWorks callback is fired
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.Setup(System.String,System.String,System.Int32)">
            <summary>
            Must be called to setup the PlugInIntegration
            </summary>
            <param name="addinPath">The path to the add-in that is calling this setup (typically acquired using GetType().Assembly.Location)</param>
            <param name="cookie">The cookie Id of the SolidWorks instance</param>
            <param name="version">The version of the currently connected SolidWorks instance</param>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.Teardown">
            <summary>
            Cleans up the plug-in app domain so that the plug-in dll files can be edited after unloading
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.ConnectedToSolidWorks">
            <summary>
            Called when the add-in has connected to SolidWorks
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.DisconnectedFromSolidWorks">
            <summary>
            Called when the add-in has disconnected from SolidWorks
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.AddPlugIn``1">
            <summary>
            Adds a plug-in based on its <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> implementation
            </summary>
            <typeparam name="T">The class that implements the <see cref="T:AngelSix.SolidDna.SolidPlugIn"/></typeparam>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.AddPlugIn(System.String)">
            <summary>
            Adds a plug-in based on its <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> implementation
            </summary>
            <param name="fullPath">The absolute path to the plug-in dll</param>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.SolidDnaPlugIns(System.String)">
            <summary>
            Discovers all SolidDna plug-ins
            </summary>
            <param name="addinPath">The path to the add-in that is calling this setup (typically acquired using GetType().Assembly.Location)</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.GetPlugIns(System.String,System.Action{AngelSix.SolidDna.SolidPlugIn})">
            <summary>
            Loads the dll into the current app domain, and finds any <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> implementations, calling onFound when it finds them
            </summary>
            <param name="pluginFullPath">The full path to the plug-in dll to load</param>
            <param name="onFound">Called when a <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> is found</param>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.GetPlugInDetails(System.String)">
            <summary>
            Loads the assembly, finds all <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> implementations and 
            creates a list of <see cref="P:AngelSix.SolidDna.PlugInIntegration.PlugInDetails"/> for them
            </summary>
            <param name="fullPath">The assembly full path to load</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegration.ConfigurePlugIns(System.String)">
            <summary>
            Runs any initialization code required on plug-ins
            </summary>
            <param name="addinPath">The path to the add-in that is calling this setup (typically acquired using GetType().Assembly.Location)</param>
        </member>
        <member name="T:AngelSix.SolidDna.PlugInIntegrationMarshal">
            <summary>
            AppDomain cross-boundary helpers
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.SetupAppDomain(System.String,System.String,System.Int32)">
            <summary>
            Configures the app-domain that the plug-ins run inside of
            </summary>
            <param name="addinPath">The path to the add-in that is calling this setup (typically acquired using GetType().Assembly.Location)</param>
            <param name="cookie">The cookie Id of the SolidWorks instance</param>
            <param name="version">The version of the currently connected SolidWorks instance</param>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.Teardown">
            <summary>
            Tears down the app-domain that the plug-ins run inside of
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.InitializeLifetimeService">
            <summary>
            Make this cross domain object last forever so GC doesn't dispose of it during inactivity
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.ConnectedToSolidWorks">
            <summary>
            Called when the add-in has connected to SolidWorks
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.DisconnectedFromSolidWorks">
            <summary>
            Called when the add-in has disconnected from SolidWorks
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.OnCallback(System.String)">
            <summary>
            Called by the SolidWorks domain (AddInIntegration) when a callback is fired
            </summary>
            <param name="name">The parameter passed into the generic callback</param>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.ConfigurePlugIns(System.String)">
            <summary>
            Runs any initialization code required on plug-ins
            </summary>
            <param name="addinPath">The path to the add-in that is calling this setup (typically acquired using GetType().Assembly.Location)</param>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.AddPlugIn(System.String)">
            <summary>
            Adds a plug-in based on its <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> implementation
            </summary>
            <param name="fullPath">The absolute path to the plug-in dll</param>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.AddPlugIn``1">
            <summary>
            Adds a plug-in based on its <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> implementation
            </summary>
            <typeparam name="T">The class that implements the <see cref="T:AngelSix.SolidDna.SolidPlugIn"/></typeparam>
        </member>
        <member name="M:AngelSix.SolidDna.PlugInIntegrationMarshal.GetPlugInDetails(System.String)">
            <summary>
            Loads the assembly, finds all <see cref="T:AngelSix.SolidDna.SolidPlugIn"/> implementations and 
            creates a list of <see cref="T:AngelSix.SolidDna.PlugInDetails"/> for them
            </summary>
            <param name="fullPath">The assembly full path to load</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.TaskpaneIntegration`1">
            <summary>
            A <see cref="T:System.Windows.Forms.UserControl"/> with additional helper methods for loading and working as
            a SolidWorks Taskpane control
            
            IMPORTANT: It is required that the class overriding this only uses a parameterless constructor
            as it is created via Com so cannot have a parameter-based construction otherwise it won't load
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.TaskpaneIntegration`1.mTaskpaneView">
            <summary>
            The SolidWorks Taskpane object for this taskpane
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.TaskpaneIntegration`1.mHostControl">
            <summary>
            The host <see cref="T:AngelSix.SolidDna.ITaskpaneControl"/> control this taskpane will create
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.TaskpaneIntegration`1.mHostProgId">
            <summary>
            The ProgId of the host control to be created
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.TaskpaneIntegration`1.Icon">
            <summary>
            An absolute path to an image icon (ideally 37x37px) to use for the taskpane icon
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.TaskpaneIntegration`1.WpfControl">
            <summary>
            The WPF user control to inject as the main control inside the <see cref="T:AngelSix.SolidDna.ITaskpaneControl"/> control
            Leave as null to ignore
            
            NOTE: If using this control, the <see cref="!:THost"/> must be of type <see cref="T:System.Windows.Forms.IContainerControl"/>
            such as a <see cref="T:System.Windows.Forms.UserControl"/>
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.TaskpaneIntegration`1.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.TaskpaneIntegration`1.AddToTaskpaneAsync">
            <summary>
            Adds the specified host control to the SolidWorks Taskpane
            
            NOTE: This call MUST be run on the UI thread
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.TaskpaneIntegration`1.RemoveFromTaskpane">
            <summary>
            Cleanup the taskpane when we disconnect/unload
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.MassProperties">
            <summary>
            Represents the mass information of a SolidWorks part
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.CenterOfMassX">
            <summary>
            The center of mass X axis
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.CenterOfMassY">
            <summary>
            The center of mass Y axis
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.CenterOfMassZ">
            <summary>
            The center of mass Z axis
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.Volume">
            <summary>
            The volume of the part
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.Area">
            <summary>
            The area of the part
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.Mass">
            <summary>
            The mass of the part in kilograms
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.MomentOfInertiaXX">
            <summary>
            The moment of inertia on XX
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.MomentOfInertiaYY">
            <summary>
            The moment of inertia on YY
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.MomentOfInertiaZZ">
            <summary>
            The moment of inertia on ZZ
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.MomentOfInertiaXY">
            <summary>
            The moment of inertia on XY
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.MomentOfInertiaZX">
            <summary>
            The moment of inertia on ZX
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.MassProperties.MomentOfInertiaYZ">
            <summary>
            The moment of inertia on YZ
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.MassProperties.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.MassProperties.#ctor(System.Double[])">
            <summary>
            Constructor accepting the SolidWorks double array containing the mass details
            </summary>
            <param name="properties">The properties from the SolidWorks GetMassProperties calls. The array should be at least 12 in length</param>
        </member>
        <member name="M:AngelSix.SolidDna.MassProperties.MassInMetric(System.Int32)">
            <summary>
            The mass of the model displayed in grams or kilograms
            </summary>
            <param name="decimalPlaces">The precision to show the value in</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.Material">
            <summary>
            Represents material information for a SolidWorks material
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Material.Classification">
            <summary>
            The classification this material belongs to (like a group). 
            For example Building Materials, Steel, Wood etc...
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Material.Name">
            <summary>
            The name of the material
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Material.Description">
            <summary>
            The description for this material
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Material.Database">
            <summary>
            The full path of the database that contains this material
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Material.DisplayName">
            <summary>
            The name and classification of the material
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Material.DatabaseFileFound">
            <summary>
            Indicates if this material information was found in a known database file
            
            If false, then the <see cref="P:AngelSix.SolidDna.Material.Database"/> will be just a filename with no extension
            of the missing database file.
            
            If true then <see cref="P:AngelSix.SolidDna.Material.Database"/> will be the full file path to the database file
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Material.ToString">
            <summary>
            Show nice string for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.Component">
            <summary>
            Represents a SolidWorks model of any type (Drawing, Part or Assembly)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Component.AsModel">
            <summary>
            Get the Model from the component
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Component.IsRoot">
            <summary>
            Check if the Component is Root
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Component.Children">
            <summary>
            Get children from this Component
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Component.Name">
            <summary>
            Get the name of the component
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Component.#ctor(SolidWorks.Interop.sldworks.Component2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ModelConfiguration">
            <summary>
            Represents a SolidWorks model configuration
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ModelConfiguration.#ctor(SolidWorks.Interop.sldworks.Configuration)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ModelConfigurationOptions">
            <summary>
            Represents a configuration option used in multiple calls
            
            NOTE: Known types are here http://help.solidworks.com/2019/english/api/swconst/SOLIDWORKS.Interop.swconst~SOLIDWORKS.Interop.swconst.swInConfigurationOpts_e.html
            
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelConfigurationOptions.ConfigPropertySuppressFeatures">
            <summary>
            Suppress Features in Configuration Property
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelConfigurationOptions.ThisConfiguration">
            <summary>
            This configuration
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelConfigurationOptions.AllConfiguration">
            <summary>
            All configurations
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelConfigurationOptions.SpecificConfiguration">
            <summary>
            Specific configuration
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelConfigurationOptions.LinkedToParent">
            <summary>
            Linked to parent
            </summary>
            <remarks>
                Valid only for derived configurations;
                if specified for non-derived configurations, 
                then the active configuration is used
            </remarks>
        </member>
        <member name="F:AngelSix.SolidDna.ModelConfigurationOptions.SpeedpakConfiguration">
            <summary>
            Speedpak Configuration
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.AssemblyDocument">
            <summary>
            Exposes all Assembly Document calls from a <see cref="T:AngelSix.SolidDna.Model"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.AssemblyDocument.mBaseObject">
            <summary>
            The base model document. Note we do not dispose of this (the parent Model will)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.AssemblyDocument.UnsafeObject">
            <summary>
            The raw underlying COM object
            WARNING: Use with caution. You must handle all disposal from this point on
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.AssemblyDocument.#ctor(SolidWorks.Interop.sldworks.AssemblyDoc)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.AssemblyDocument.GetFeatureByName(System.String,System.Action{AngelSix.SolidDna.ModelFeature})">
            <summary>
            Gets the <see cref="T:AngelSix.SolidDna.ModelFeature"/> of the item in the feature tree based on its name
            </summary>
            <param name="featureName">Name of the feature</param>
            <returns>The <see cref="T:AngelSix.SolidDna.ModelFeature"/> for the named feature</returns>
        </member>
        <member name="T:AngelSix.SolidDna.DrawingDocument">
            <summary>
            Exposes all Drawing Document calls from a <see cref="T:AngelSix.SolidDna.Model"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingDocument.mBaseObject">
            <summary>
            The base model document. Note we do not dispose of this (the parent Model will)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.DrawingDocument.UnsafeObject">
            <summary>
            The raw underlying COM object
            WARNING: Use with caution. You must handle all disposal from this point on
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.#ctor(SolidWorks.Interop.sldworks.DrawingDoc)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.ActivateSheet(System.String)">
            <summary>
            Activates the specified drawing sheet
            </summary>
            <param name="sheetName">Name of the sheet</param>
            <returns>True if the sheet was activated, false if SOLIDWORKS generated an error</returns>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.CurrentActiveSheet">
            <summary>
            Gets the name of the currently active sheet
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.SheetNames">
            <summary>
            Gets the sheet names of the drawing
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.ActivateView(System.String)">
            <summary>
            Activates the specified drawing view
            </summary>
            <param name="viewName">Name of the drawing view</param>
            <returns>True if successful, false if not</returns>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.AlignViewHorizontally">
            <summary>
            Rotates the view so the selected line in the view is horizontal
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.AlignViewVertically">
            <summary>
            Rotates the view so the selected line in the view is vertical
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.Views(System.Action{System.Collections.Generic.List{AngelSix.SolidDna.DrawingView}})">
            <summary>
            Gets all the views of the drawing
            </summary>
            <param name="viewsCallback">The callback containing all views</param>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.AutoBalloon(AngelSix.SolidDna.AutoBalloonOptions,System.Action{AngelSix.SolidDna.Note[]})">
            <summary>
            Automatically inserts BOM balloons in selected drawing views
            </summary>
            <param name="options">The balloon options</param>
            <param name="onSuccess">Callback containing all created notes if successful</param>
            <returns>An array of the created <see cref="T:AngelSix.SolidDna.Note"/> objects</returns>
            <remarks>
                This method automatically inserts BOM balloons for bill of materials 
                items in selected drawing views. If a drawing sheet is selected, BOM 
                balloons are automatically inserted for all of the drawing views on that 
                drawing sheet. 
                
                To automatically insert BOM balloons, select one or more views or sheets
                for which to automatically create BOM balloons, then call this method.
            </remarks>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.AddChamferDimension(System.Double,System.Double,System.Double)">
            <summary>
            Adds a chamfer dimension to the selected edges
            </summary>
            <param name="x">X dimension</param>
            <param name="y">Y dimension</param>
            <param name="z">Z dimension</param>
            <returns>The chamfer <see cref="T:AngelSix.SolidDna.ModelDisplayDimension"/> if successful. Null if not.</returns>
            <remarks>Make sure to select the 2 edges of the chamfer before running this command</remarks>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.AddHoleCutout(System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x">X dimension</param>
            <param name="y">Y dimension</param>
            <param name="z">Z dimension</param>
            <returns>The hole cutout <see cref="T:AngelSix.SolidDna.ModelDisplayDimension"/> if successful. Null if not.</returns>
            <remarks>Make sure to select the hole sketch circle before running this command</remarks>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.AlignOrdinateDimension">
            <summary>
            Re-aligns the selected ordinate dimension if it was previously broken
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.AttachAnnotation(AngelSix.SolidDna.AttachAnnotationOption)">
            <summary>
            Attaches an existing annotation to a drawing sheet or view
            </summary>
            <param name="option">The attach option</param>
            <returns>True if successful, false if not</returns>
            <remarks>
                Remember to select the annotation and if attaching to a view select an
                element on the view also before running this command
            </remarks>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.AttachDimensions">
            <summary>
            Attempts to attach unattached dimensions, for example in an imported DXF file
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingDocument.AddLineStyle(System.String,System.Boolean,System.Double[])">
            <summary>
            Adds a line style to the drawing document
            </summary>
            <param name="styleName">The name of the style</param>
            <param name="boldLineEnds">True to have bold dots at each end of the line</param>
            <param name="segments">Segments. Positive numbers are dashes, negative are gaps</param>
            <returns></returns>
            <example>
                AddLineStyle("NewStyle", true, 1.25,-0.5,0.5,-0.5);
                To add a new line like this:
                -----  --  -----  --  -----  --
            </example>
        </member>
        <member name="T:AngelSix.SolidDna.PartDocument">
            <summary>
            Exposes all Part Document calls from a <see cref="T:AngelSix.SolidDna.Model"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.PartDocument.mBaseObject">
            <summary>
            The base model document. Note we do not dispose of this (the parent Model will)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PartDocument.UnsafeObject">
            <summary>
            The raw underlying COM object
            WARNING: Use with caution. You must handle all disposal from this point on
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PartDocument.#ctor(SolidWorks.Interop.sldworks.PartDoc)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PartDocument.GetFeatureByName(System.String,System.Action{AngelSix.SolidDna.ModelFeature})">
            <summary>
            Gets the <see cref="T:AngelSix.SolidDna.ModelFeature"/> of the item in the feature tree based on its name
            </summary>
            <param name="featureName">Name of the feature</param>
            <returns>The <see cref="T:AngelSix.SolidDna.ModelFeature"/> for the named feature</returns>
        </member>
        <member name="T:AngelSix.SolidDna.BoundingBox">
            <summary>
            A bounding box for a view or similar object
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.BoundingBox.Left">
            <summary>
            The left edge
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.BoundingBox.Right">
            <summary>
            The right edge
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.BoundingBox.Bottom">
            <summary>
            The bottom edge
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.BoundingBox.Top">
            <summary>
            The top edge
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.BoundingBox.Width">
            <summary>
            The width
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.BoundingBox.Height">
            <summary>
            The height
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.BoundingBox.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Default constructor
            </summary>
            <param name="left">Left edge</param>
            <param name="bottom">Bottom edge</param>
            <param name="right">Right edge</param>
            <param name="top">Top edge</param>
        </member>
        <member name="T:AngelSix.SolidDna.DrawingSheet">
            <summary>
            A sheet of a drawing
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingSheet.mDrawingDoc">
            <summary>
            The parent drawing document of this sheet
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.DrawingSheet.SheetName">
            <summary>
            The sheet name
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingSheet.#ctor(SolidWorks.Interop.sldworks.Sheet,AngelSix.SolidDna.DrawingDocument)">
            <summary>
            Default constructor
            </summary>
            <param name="comObject">The underlying COM object</param>
            <param name="drawing">The parent drawing document</param>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingSheet.Activate">
            <summary>
            Activates this sheet
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.DrawingView">
            <summary>
            A view of a drawing
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.DrawingView.ViewType">
            <summary>
            The drawing view type
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.DrawingView.Name">
            <summary>
            The name of the view
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.DrawingView.PositionX">
            <summary>
            The X position of the view origin with respect to the drawing sheet origin
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.DrawingView.PositionY">
            <summary>
            The Y position of the view origin with respect to the drawing sheet origin
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.DrawingView.BoundingBox">
            <summary>
            The bounding box of the view
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.DrawingView.#ctor(SolidWorks.Interop.sldworks.View)">
            <summary>
            Default constructor
            </summary>
            <param name="comObject">The underlying COM object</param>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.DrawingSheet">
            <summary>
            Drawing sheet
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.SectionView">
            <summary>
            Section view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.DetailView">
            <summary>
            Detail view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.ProjectedView">
            <summary>
            Projected (unfolded) view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.AuxiliaryView">
            <summary>
            Auxiliary view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.StandardView">
            <summary>
            Standard view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.NamedView">
            <summary>
            Named view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.RelativeView">
            <summary>
            Relative view to the model
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.DetachedView">
            <summary>
            Detached view
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.DrawingViewType.AlternatePositionView">
            <summary>
            Alternate position view
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ModelFeature">
            <summary>
            Represents a SolidWorks feature of any type.
            NOTE: This is a SharedSolidDnaObject so the passed 
            in COM object should be final disposed by the <see cref="T:AngelSix.SolidDna.SelectedObject"/> parent
            
            TODO: See if we can add support for non-interface types
                   
                  Bending (Flex), Deform, Imported, GridFeature (Grid), 
                  AEMTorsionalSpring (TorsionalSpring), FormToolInstance (FormTool), 
                  BlendRefSurface (Surface-Loft), RefSurface (Surface-Imported),
                  SweepRefSurface (Surface-Sweep), UnTrimRefSurf (Surface-Untrim)
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeature.mSpecificFeature">
            <summary>
            The specific feature for this feature, if any
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeature.mFeatureData">
            <summary>
            The feature data for this feature, if any
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.FeatureType">
            <summary>
            The specific type of this feature
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.FeatureTypeName">
            <summary>
            Gets the SolidWorks feature type name, such as RefSurface, CosmeticWeldBead, FeatSurfaceBodyFolder etc...
            </summary>
            <returns></returns>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.FeatureName">
            <summary>
            Gets the SolidWorks feature name, such as Sketch1
            </summary>
            <returns></returns>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.SpecificFeature">
            <summary>
            The specific feature for this feature, if any.
            NOTE: This is a COM object. Set all instance variables of this to null once done if you set any
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.FeatureData">
            <summary>
            The feature data for this feature, if any.
            NOTE: This is a COM object. Set all instance variables of this to null once done if you set any
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsAttribute">
            <summary>
            Checks if this feature's specific type is an Attribute
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsBodyFolder">
            <summary>
            Checks if this feature's specific type is a Body Folder
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsBom">
            <summary>
            Checks if this feature's specific type is a BOM
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCamera">
            <summary>
            Checks if this feature's specific type is a Camera
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCommentFolder">
            <summary>
            Checks if this feature's specific type is a Comment Folder
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCosmeticWeldBeadFolder">
            <summary>
            Checks if this feature's specific type is a Cosmetic Weld Bead Folder 
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsDetailCircle">
            <summary>
            Checks if this feature's specific type is a Detail Circle
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsDrSection">
            <summary>
            Checks if this feature's specific type is a Section view
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsFeatureFolder">
            <summary>
            Checks if this feature's specific type is a Feature Folder
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsLight">
            <summary>
            Checks if this feature's specific type is a Light
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMate">
            <summary>
            Checks if this feature's specific type is a Mate 
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMateReference">
            <summary>
            Checks if this feature's specific type is a Mate Reference 
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMotionStudyResults">
            <summary>
            Checks if this feature's specific type is a Motion Study Results
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsReferenceAxis">
            <summary>
            Checks if this feature's specific type is a Ref Axis
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsReferenceCurve">
            <summary>
            Checks if this feature's specific type is a Reference Curve
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsReferencePlane">
            <summary>
            Checks if this feature's specific type is a Reference Plane
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsReferencePoint">
            <summary>
            Checks if this feature's specific type is a Reference Point
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSensor">
            <summary>
            Checks if this feature's specific type is a Sensor 
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSketch">
            <summary>
            Checks if this feature's specific type is a Sketch
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSketchBlockDefinition">
            <summary>
            Checks if this feature's specific type is a Sketch Block Definition
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSketchBlockInstance">
            <summary>
            Checks if this feature's specific type is a Sketch Block Instance 
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSketchPicture">
            <summary>
            Checks if this feature's specific type is a Sketch Picture
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceMid">
            <summary>
            Checks if this feature's specific type is a Surface Mid
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsTableAnchor">
            <summary>
            Checks if this feature's specific type is a Table Anchor
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsBaseFlangeData">
            <summary>
            Checks if this feature's specific type is Base Flange data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsBendsData">
            <summary>
            Checks if this feature's specific type is Bends data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsBoundaryBossData">
            <summary>
            Checks if this feature's specific type is Boundary Boss data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsBreakCornerData">
            <summary>
            Checks if this feature's specific type is Break Corner data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsBrokenOutSectionData">
            <summary>
            Checks if this feature's specific type is Broken Out Section data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCavityData">
            <summary>
            Checks if this feature's specific type is Cavity data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsChainPatternData">
            <summary>
            Checks if this feature's specific type is Chain Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsChamferData">
            <summary>
            Checks if this feature's specific type is Chamfer data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCircularPatternData">
            <summary>
            Checks if this feature's specific type is Circular Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCombineBodiesData">
            <summary>
            Checks if this feature's specific type is Combine Bodies data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCompositeCurveData">
            <summary>
            Checks if this feature's specific type is Composite Curve data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCoordinateSystemData">
            <summary>
            Checks if this feature's specific type is Coordinate System data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCoreData">
            <summary>
            Checks if this feature's specific type is Core data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCosmeticThreadData">
            <summary>
            Checks if this feature's specific type is Cosmetic Thread data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCosmeticWeldBeadData">
            <summary>
            Checks if this feature's specific type is Cosmetic Weld Bead data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCrossBreakData">
            <summary>
            Checks if this feature's specific type is Cross Break data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsCurveDrivenPatternData">
            <summary>
            Checks if this feature's specific type is Curve Driven Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsDeleteBodyData">
            <summary>
            Checks if this feature's specific type is Delete Body data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsDeleteFaceData">
            <summary>
            Checks if this feature's specific type is Delete Face data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsDerivedPartData">
            <summary>
            Checks if this feature's specific type is Derived Part data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsDerivedPatternData">
            <summary>
            Checks if this feature's specific type is Derived Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsDimPatternData">
            <summary>
            Checks if this feature's specific type is Dim Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsDomeData">
            <summary>
            Checks if this feature's specific type is Dome data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsDraftData">
            <summary>
            Checks if this feature's specific type is Draft data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsEdgeFlangeData">
            <summary>
            Checks if this feature's specific type is Edge Flange data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsEndCapData">
            <summary>
            Checks if this feature's specific type is End Cap data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsExtrudeData">
            <summary>
            Checks if this feature's specific type is Extrude data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsFillPatternData">
            <summary>
            Checks if this feature's specific type is Fill Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsFlatPatternData">
            <summary>
            Checks if this feature's specific type is Flat Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsFoldsData">
            <summary>
            Checks if this feature's specific type is Folds data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsFreePointCurveData">
            <summary>
            Checks if this feature's specific type is Free Point Curve data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsGussetData">
            <summary>
            Checks if this feature's specific type is Gusset data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsHealEdgesData">
            <summary>
            Checks if this feature's specific type is Heal Edges data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsHelixData">
            <summary>
            Checks if this feature's specific type is Helix data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsHemData">
            <summary>
            Checks if this feature's specific type is Hem data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsHoleSeriesData">
            <summary>
            Checks if this feature's specific type is Hole Series data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsHoleWizardData">
            <summary>
            Checks if this feature's specific type is Hole Wizard data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsImportedCurveData">
            <summary>
            Checks if this feature's specific type is Imported Curve data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsIndentData">
            <summary>
            Checks if this feature's specific type is Indent data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsIntersectData">
            <summary>
            Checks if this feature's specific type is Intersect data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsJogData">
            <summary>
            Checks if this feature's specific type is Jog data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsLibraryFeatureData">
            <summary>
            Checks if this feature's specific type is Library Feature data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsLinearPatternData">
            <summary>
            Checks if this feature's specific type is Linear Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsLocalCircularPatternData">
            <summary>
            Checks if this feature's specific type is Local Circular Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsLocalCurvePatternData">
            <summary>
            Checks if this feature's specific type is Local Curve Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsLocalLinearPatternData">
            <summary>
            Checks if this feature's specific type is Local Linear Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsLoftData">
            <summary>
            Checks if this feature's specific type is Loft data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsLoftedBendData">
            <summary>
            Checks if this feature's specific type is Lofted Bend data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMacroData">
            <summary>
            Checks if this feature's specific type is Macro data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMirrorPartData">
            <summary>
            Checks if this feature's specific type is Mirror Part data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMirrorPatternData">
            <summary>
            Checks if this feature's specific type is Mirror Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMirrorSolidData">
            <summary>
            Checks if this feature's specific type is Mirror Solid data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMiterFlangeData">
            <summary>
            Checks if this feature's specific type is Miter Flange data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMotionPlotAxisData">
            <summary>
            Checks if this feature's specific type is Motion Plot Axis data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMotionPlotData">
            <summary>
            Checks if this feature's specific type is Motion Plot data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsMoveCopyBodyData">
            <summary>
            Checks if this feature's specific type is Move Copy Body data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsOneBendData">
            <summary>
            Checks if this feature's specific type is One Bend data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsPartingLineData">
            <summary>
            Checks if this feature's specific type is Parting Line data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsPartingSurfaceData">
            <summary>
            Checks if this feature's specific type is Parting Surface data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsProjectionCurveData">
            <summary>
            Checks if this feature's specific type is Projection Curve data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsReferenceAxisData">
            <summary>
            Checks if this feature's specific type is Reference Axis data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsReferencePlaneData">
            <summary>
            Checks if this feature's specific type is Reference Plane data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsReferencePointCurveData">
            <summary>
            Checks if this feature's specific type is Reference Point Curve data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsReferencePointData">
            <summary>
            Checks if this feature's specific type is Reference Point data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsReplaceFaceData">
            <summary>
            Checks if this feature's specific type is Replace Face data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsRevolveData">
            <summary>
            Checks if this feature's specific type is Revolve data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsRibData">
            <summary>
            Checks if this feature's specific type is Rib data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsRipData">
            <summary>
            Checks if this feature's specific type is Rip data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSaveBodyData">
            <summary>
            Checks if this feature's specific type is Save Body data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsScaleData">
            <summary>
            Checks if this feature's specific type is Scale data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSheetMetalData">
            <summary>
            Checks if this feature's specific type is Sheet Metal data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSheetMetalGussetData">
            <summary>
            Checks if this feature's specific type is Sheet Metal Gusset data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsShellData">
            <summary>
            Checks if this feature's specific type is Shell data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsShutOffSurfaceData">
            <summary>
            Checks if this feature's specific type is Shut Off Surface data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSimpleFilletData">
            <summary>
            Checks if this feature's specific type is Simple Fillet data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSimpleHoleData">
            <summary>
            Checks if this feature's specific type is Simple Hole data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSimulation3DContactData">
            <summary>
            Checks if this feature's specific type is Simulation 3D Contact data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSimulationDamperData">
            <summary>
            Checks if this feature's specific type is Simulation Damper data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSimulationForceData">
            <summary>
            Checks if this feature's specific type is Simulation Force data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSimulationGravityData">
            <summary>
            Checks if this feature's specific type is Simulation Gravity data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSimulationLinearSpringData">
            <summary>
            Checks if this feature's specific type is Simulation Linear Spring data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSimulationMotorData">
            <summary>
            Checks if this feature's specific type is Simulation Motor data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSketchedBendData">
            <summary>
            Checks if this feature's specific type is Sketched Bend data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSketchPatternData">
            <summary>
            Checks if this feature's specific type is Sketch Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSmartComponentData">
            <summary>
            Checks if this feature's specific type is Smart Component data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSplitBodyData">
            <summary>
            Checks if this feature's specific type is Split Body data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSplitLineData">
            <summary>
            Checks if this feature's specific type is Split Line data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceCutData">
            <summary>
            Checks if this feature's specific type is Surface Cut data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceExtendData">
            <summary>
            Checks if this feature's specific type is Surface Extend data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceExtrudeData">
            <summary>
            Checks if this feature's specific type is Surface Extrude data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceFillData">
            <summary>
            Checks if this feature's specific type is Surface Fill data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceFlattenData">
            <summary>
            Checks if this feature's specific type is Surface Flatten data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceKnitData">
            <summary>
            Checks if this feature's specific type is Surface Knit data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceOffsetData">
            <summary>
            Checks if this feature's specific type is Surface Offset data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfacePlanarData">
            <summary>
            Checks if this feature's specific type is Surface Planar data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceRadiateData">
            <summary>
            Checks if this feature's specific type is Surface Radiate data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceRevolveData">
            <summary>
            Checks if this feature's specific type is Surface Revolve data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceRuledData">
            <summary>
            Checks if this feature's specific type is Surface Ruled data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSurfaceTrimData">
            <summary>
            Checks if this feature's specific type is Surface Trim data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsSweepData">
            <summary>
            Checks if this feature's specific type is Sweep data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsTablePatternData">
            <summary>
            Checks if this feature's specific type is Table Pattern data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsThickenData">
            <summary>
            Checks if this feature's specific type is Thicken data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsToolingSplitData">
            <summary>
            Checks if this feature's specific type is Tooling Split data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsVariableFilletData">
            <summary>
            Checks if this feature's specific type is Variable Fillet data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsWeldmentBeadData">
            <summary>
            Checks if this feature's specific type is Weldment Bead data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsWeldmentCutListData">
            <summary>
            Checks if this feature's specific type is Weldment Cut List data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsWeldmentMemberData">
            <summary>
            Checks if this feature's specific type is Weldment Member data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsWeldmentTrimExtendData">
            <summary>
            Checks if this feature's specific type is Weldment Trim Extend data
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelFeature.IsWrapSketchData">
            <summary>
            Checks if this feature's specific type is Wrap Sketch data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ModelFeature.#ctor(SolidWorks.Interop.sldworks.Feature)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ModelFeature.SetSuppressionState(AngelSix.SolidDna.ModelFeatureSuppressionState,AngelSix.SolidDna.ModelConfigurationOptions,System.String[])">
            <summary>
            Sets the suppression state of this feature
            </summary>
            <remarks>SolidWorks does not allow suppressing features while a PropertyManager page is open.</remarks>
            <param name="state">Suppression state as defined in <see cref="T:AngelSix.SolidDna.ModelFeatureSuppressionState"/></param>
            <param name="configurationOption">Configuration option as defined in <see cref="T:AngelSix.SolidDna.ModelConfigurationOptions"/></param>
            <param name="configurationNames">Array of configuration names; valid only if configurationOption set to <see cref="F:AngelSix.SolidDna.ModelConfigurationOptions.SpecificConfiguration"/></param>
            <returns>True if operation was successful</returns>
        </member>
        <member name="M:AngelSix.SolidDna.ModelFeature.IsSuppressed(AngelSix.SolidDna.ModelConfigurationOptions,System.String[])">
            <summary>
            Gets whether the feature in the specified configurations is suppressed
            </summary>
            <param name="configurationOption">Configuration option as defined in <see cref="T:AngelSix.SolidDna.ModelConfigurationOptions"/></param>
            <param name="configurationNames">Array of configuration names</param>
            <returns>Array of Booleans indicating the suppression states for the feature in the specified configurations</returns>
        </member>
        <member name="M:AngelSix.SolidDna.ModelFeature.GetFeatureTypeName">
            <summary>
            Gets the SolidWorks feature type name, such as RefSurface, CosmeticWeldBead, FeatSurfaceBodyFolder etc...
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.ModelFeature.Dispose">
            <summary>
            Disposing
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ModelFeatureSuppressionState">
            <summary>
            Represents the suppression state action of a <see cref="T:AngelSix.SolidDna.ModelFeature"/>
            
            NOTE: Known types are here http://help.solidworks.com/2019/english/api/swconst/SOLIDWORKS.Interop.swconst~SOLIDWORKS.Interop.swconst.swFeatureSuppressionAction_e.html
            
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureSuppressionState.SuppressFeature">
            <summary>
            Suppress the feature
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureSuppressionState.UnSuppressFeature">
            <summary>
            Unsuppress the feature
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureSuppressionState.UnSuppressDependent">
            <summary>
            Unsuppress the children of the feature
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ModelFeatureType">
            <summary>
            Represents the specific feature type of a <see cref="T:AngelSix.SolidDna.ModelFeature"/>
            
            NOTE: Known types are here http://help.solidworks.com/2016/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeature~GetTypeName2.html
            
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.None">
            <summary>
            For a feature that cannot have any more information extracted about it
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Sketch">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureSketch"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Feature">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.ModelFeature"/> itself (such as an assembly as an InContextFeatureHolder)
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Mate">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureMate"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MateReference">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureMateReference"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SmartComponentFeatureData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureSmartComponentData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.FillPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureFillPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ExtrudeData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureExtrudeData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.LoftData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureLoftData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ChamferData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureChamferData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CircularPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureCircularPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CombineBodiesData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureCombineBodiesData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CosmeticThreadData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureCosmeticThreadData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SaveBodyData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureSaveBodyData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CurveDrivenPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureCurveDrivenPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.DeleteBodyData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureDeleteBodyData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.DeleteFaceData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureDeleteFaceData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.DerivedPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureDerivedPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.DimPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureDimPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.DomeData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureDomeData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.DraftData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureDraftData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.HealEdgesData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureHealEdgesData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.WrapSketchData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureWrapSketchData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SimpleFilletData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureSimpleFilletData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.HelixData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureHelixData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.HoleSeriesData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureHoleSeriesData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.HoleWizardData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureHoleWizardData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ChainPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureChainPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.LocalCircularPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureLocalCircularPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.LocalCurvePatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureLocalCurvePatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.LocalLinearPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureLocalLinearPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.LinearPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureLinearPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MacroData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureMacroData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MirrorPatternData">
            <summary>
            The feature is <see cref="T:AngelSix.SolidDna.FeatureMirrorPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MirrorSolidData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureMirrorSolidData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MirrorPartData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureMirrorPartData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MoveCopyBodyData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureMoveCopyBodyData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.BoundaryBossData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureBoundaryBossData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.IndentData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureIndentData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ReplaceFaceData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureReplaceFaceData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.RevolveData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureRevolveData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.RibData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureRibData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.RipData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureRipData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.IntersectData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureIntersectData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ShellData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureShellData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SplitBodyData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSplitBodyData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.DerivedPartData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureDerivedPartData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SweepData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSweepData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.TablePatternData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureTablePatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ThickenData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureThickenData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.VariableFilletData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureVariableFilletData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.TableAnchor">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureTableAnchor"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Bom">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureBom"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.DetailCircle">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureDetailCircle"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.DrSection">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureDrSection"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.BrokenOutSectionData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureBrokenOutSectionData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ReferencePlane">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureRefPlane"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CommentFolder">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureCommentFolder"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CosmeticWeldBeadFolder">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureCosmeticWeldBeadFolder"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.BodyFolder">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureBodyFolder"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.FeatureFolder">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureFeatureFolder"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Attribute">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureAttribute"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.FreePointCurveData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureFreePointCurveData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.LibraryFeatureData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureLibraryFeatureData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ScaleData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureScaleData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Sensor">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSensor"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CavityData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureCavityData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ToolingSplitData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureToolingSplitData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.PartingSurfaceData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeaturePartingSurfaceData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.PartingLineData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeaturePartingLineData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ShutOffSurfaceData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureShutOffSurfaceData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CoreData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureCoreData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Simulation3DContactData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSimulation3DContactData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SimulationGravityData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSimulationGravityData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SimulationDamperData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSimulationDamperData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SimulationMotorData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSimulationMotorData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SimulationLinearSpringData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSimulationLinearSpringData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SimulationForceData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSimulationForceData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MotionPlotData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureMotionPlotData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MotionPlotAxisData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureMotionPlotAxisData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MotionStudyResults">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureMotionStudyResults"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CoordinateSystemData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureCoordinateSystemData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ReferenceAxis">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureRefAxis"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ReferenceAxisData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureReferenceAxisData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ReferencePlaneData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureReferencePlaneData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Light">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureLight"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Camera">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureCamera"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.BaseFlangeData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureBaseFlangeData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.BreakCornerData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureBreakCornerData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CrossBreakData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureCrossBreakData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.EdgeFlangeData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureEdgeFlangeData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.FlatPatternData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureFlatPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.BendsData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureBendsData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.FoldsData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureFoldsData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.HemData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureHemData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.JogData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureJogData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.LoftedBendsData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureLoftedBendsData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.OneBendData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureOneBendData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SheetMetalData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSheetMetalData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SketchedBendData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSketchedBendData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SheetMetalGussetData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSheetMetalGussetData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.MiterFlangeData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureMiterFlangeData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ReferenceCurve">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureReferenceCurve"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ReferencePointCurveData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureReferencePointCurveData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CompositeCurveData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureCompositeCurveData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ImportedCurveData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureImportedCurveData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SplitLineData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSplitLineData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ProjectionCurveData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureProjectionCurveData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ReferencePoint">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureRefPoint"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ReferencePointData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureReferencePointData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SketchBlockDefinition">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSketchBlockDefinition"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SketchBlockInstance">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSketchBlockInstance"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SimpleHoleData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSimpleHoleData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SketchPatternData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSketchPatternData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SketchPicture">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSketchPicture"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceExtendData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceExtendData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceExtrudeData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceExtrudeData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceFillData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceFillData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceFlattenData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceFlattenData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceMid">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceMid"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceOffsetData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceOffsetData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfacePlanarData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfacePlanarData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceRadiateData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceRadiateData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceRevolveData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceRevolveData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceRuledData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceRuledData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceKnitData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceKnitData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceCutData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceCutData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceTrimData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureSurfaceTrimData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.CosmeticWeldBeadData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureCosmeticWeldBeadData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.EndCapData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureEndCapData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.GussetData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureGussetData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.WeldmentBeadData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureWeldmentBeadData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.WeldmentTrimExtendData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureWeldmentTrimExtendData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.WeldmentMemberData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureWeldmentMemberData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.WeldmentCutListData">
            <summary>
            This feature is <see cref="T:AngelSix.SolidDna.FeatureWeldmentCutListData"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Flex">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Deform">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Imported">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Grid">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.TorsionalSpring">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.FormTool">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceLoft">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceImported">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceSweep">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SurfaceUntrim">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.SplitBody">
            <summary>
            This feature does not have an interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.BlockFolder">
            <summary>
            This feature is obsolete and has no interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.BlockDef">
            <summary>
            This feature is obsolete and has no interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.Shape">
            <summary>
            This feature is obsolete and has no interface
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelFeatureType.ViewBodyFeature">
            <summary>
            This feature is obsolete and has no interface
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ModelFeatureTypeMapping">
            <summary>
            Maps SolidWorks model Features to their specific types
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureBaseFlangeData">
            <summary>
            Represents a SolidWorks Base Flange feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureBaseFlangeData.#ctor(SolidWorks.Interop.sldworks.IBaseFlangeFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureBendsData">
            <summary>
            Represents a SolidWorks Bends feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureBendsData.#ctor(SolidWorks.Interop.sldworks.IBendsFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureBoundaryBossData">
            <summary>
            Represents a SolidWorks Boundary Boss feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureBoundaryBossData.#ctor(SolidWorks.Interop.sldworks.IBoundaryBossFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureBreakCornerData">
            <summary>
            Represents a SolidWorks Break Corner feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureBreakCornerData.#ctor(SolidWorks.Interop.sldworks.IBreakCornerFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureBrokenOutSectionData">
            <summary>
            Represents a SolidWorks Broken Out Section feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureBrokenOutSectionData.#ctor(SolidWorks.Interop.sldworks.IBrokenOutSectionFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCavityData">
            <summary>
            Represents a SolidWorks Cavity feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCavityData.#ctor(SolidWorks.Interop.sldworks.ICavityFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureChainPatternData">
            <summary>
            Represents a SolidWorks Chain Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureChainPatternData.#ctor(SolidWorks.Interop.sldworks.IChainPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureChamferData">
            <summary>
            Represents a SolidWorks Chamfer feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureChamferData.#ctor(SolidWorks.Interop.sldworks.IChamferFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCircularPatternData">
            <summary>
            Represents a SolidWorks Circular Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCircularPatternData.#ctor(SolidWorks.Interop.sldworks.ICircularPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCombineBodiesData">
            <summary>
            Represents a SolidWorks Combine Bodies feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCombineBodiesData.#ctor(SolidWorks.Interop.sldworks.ICombineBodiesFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCompositeCurveData">
            <summary>
            Represents a SolidWorks Composite Curve feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCompositeCurveData.#ctor(SolidWorks.Interop.sldworks.ICompositeCurveFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCoordinateSystemData">
            <summary>
            Represents a SolidWorks Coordinate System feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCoordinateSystemData.#ctor(SolidWorks.Interop.sldworks.ICoordinateSystemFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCoreData">
            <summary>
            Represents a SolidWorks Core feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCoreData.#ctor(SolidWorks.Interop.sldworks.ICoreFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCosmeticThreadData">
            <summary>
            Represents a SolidWorks Cosmetic Thread feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCosmeticThreadData.#ctor(SolidWorks.Interop.sldworks.ICosmeticThreadFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCosmeticWeldBeadData">
            <summary>
            Represents a SolidWorks Cosmetic Weld Bead feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCosmeticWeldBeadData.#ctor(SolidWorks.Interop.sldworks.ICosmeticWeldBeadFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCrossBreakData">
            <summary>
            Represents a SolidWorks Cross Break feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCrossBreakData.#ctor(SolidWorks.Interop.sldworks.ICrossBreakFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCurveDrivenPatternData">
            <summary>
            Represents a SolidWorks Curve Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCurveDrivenPatternData.#ctor(SolidWorks.Interop.sldworks.ICurveDrivenPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureDeleteBodyData">
            <summary>
            Represents a SolidWorks Delete Body feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureDeleteBodyData.#ctor(SolidWorks.Interop.sldworks.IDeleteBodyFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureDeleteFaceData">
            <summary>
            Represents a SolidWorks Delete Face feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureDeleteFaceData.#ctor(SolidWorks.Interop.sldworks.IDeleteFaceFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureDerivedPartData">
            <summary>
            Represents a SolidWorks Derived Part feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureDerivedPartData.#ctor(SolidWorks.Interop.sldworks.IDerivedPartFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureDerivedPatternData">
            <summary>
            Represents a SolidWorks Derived Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureDerivedPatternData.#ctor(SolidWorks.Interop.sldworks.IDerivedPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureDimPatternData">
            <summary>
            Represents a SolidWorks Dim Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureDimPatternData.#ctor(SolidWorks.Interop.sldworks.IDimPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureDomeData">
            <summary>
            Represents a SolidWorks Dome feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureDomeData.#ctor(SolidWorks.Interop.sldworks.IDomeFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureDraftData">
            <summary>
            Represents a SolidWorks Draft feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureDraftData.#ctor(SolidWorks.Interop.sldworks.IDraftFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureEdgeFlangeData">
            <summary>
            Represents a SolidWorks Edge Flange feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureEdgeFlangeData.#ctor(SolidWorks.Interop.sldworks.IEdgeFlangeFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureEndCapData">
            <summary>
            Represents a SolidWorks End Cap feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureEndCapData.#ctor(SolidWorks.Interop.sldworks.IEndCapFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureExtrudeData">
            <summary>
            Represents a SolidWorks Extrude feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureExtrudeData.#ctor(SolidWorks.Interop.sldworks.IExtrudeFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureFillPatternData">
            <summary>
            Represents a SolidWorks Fill Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureFillPatternData.#ctor(SolidWorks.Interop.sldworks.IFillPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureFlatPatternData">
            <summary>
            Represents a SolidWorks Flat Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureFlatPatternData.#ctor(SolidWorks.Interop.sldworks.IFlatPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureFoldsData">
            <summary>
            Represents a SolidWorks Folds feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureFoldsData.#ctor(SolidWorks.Interop.sldworks.IFoldsFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureFreePointCurveData">
            <summary>
            Represents a SolidWorks Free Point Curve feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureFreePointCurveData.#ctor(SolidWorks.Interop.sldworks.IFreePointCurveFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureGussetData">
            <summary>
            Represents a SolidWorks Gusset feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureGussetData.#ctor(SolidWorks.Interop.sldworks.IGussetFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureHealEdgesData">
            <summary>
            Represents a SolidWorks Heal Edges feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureHealEdgesData.#ctor(SolidWorks.Interop.sldworks.IHealEdgesFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureHelixData">
            <summary>
            Represents a SolidWorks Helix feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureHelixData.#ctor(SolidWorks.Interop.sldworks.IHelixFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureHemData">
            <summary>
            Represents a SolidWorks Hem feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureHemData.#ctor(SolidWorks.Interop.sldworks.IHemFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureHoleSeriesData">
            <summary>
            Represents a SolidWorks Hole Series feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureHoleSeriesData.#ctor(SolidWorks.Interop.sldworks.IHoleSeriesFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureHoleWizardData">
            <summary>
            Represents a SolidWorks Hole Wizard feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureHoleWizardData.#ctor(SolidWorks.Interop.sldworks.IWizardHoleFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureImportedCurveData">
            <summary>
            Represents a SolidWorks Imported Curve feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureImportedCurveData.#ctor(SolidWorks.Interop.sldworks.IImportedCurveFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureIndentData">
            <summary>
            Represents a SolidWorks Indent feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureIndentData.#ctor(SolidWorks.Interop.sldworks.IIndentFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureIntersectData">
            <summary>
            Represents a SolidWorks Intersect feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureIntersectData.#ctor(SolidWorks.Interop.sldworks.IIntersectFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureJogData">
            <summary>
            Represents a SolidWorks Jog feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureJogData.#ctor(SolidWorks.Interop.sldworks.IJogFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureLibraryFeatureData">
            <summary>
            Represents a SolidWorks Library Feature feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureLibraryFeatureData.#ctor(SolidWorks.Interop.sldworks.ILibraryFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureLinearPatternData">
            <summary>
            Represents a SolidWorks Linear Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureLinearPatternData.#ctor(SolidWorks.Interop.sldworks.ILinearPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureLocalCircularPatternData">
            <summary>
            Represents a SolidWorks Local Circular Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureLocalCircularPatternData.#ctor(SolidWorks.Interop.sldworks.ILocalCircularPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureLocalCurvePatternData">
            <summary>
            Represents a SolidWorks Local Curve Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureLocalCurvePatternData.#ctor(SolidWorks.Interop.sldworks.ILocalCurvePatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureLocalLinearPatternData">
            <summary>
            Represents a SolidWorks Local Linear Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureLocalLinearPatternData.#ctor(SolidWorks.Interop.sldworks.ILocalLinearPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureLoftData">
            <summary>
            Represents a SolidWorks Loft feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureLoftData.#ctor(SolidWorks.Interop.sldworks.ILoftFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureLoftedBendsData">
            <summary>
            Represents a SolidWorks Lofted Bends feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureLoftedBendsData.#ctor(SolidWorks.Interop.sldworks.ILoftedBendsFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMacroData">
            <summary>
            Represents a SolidWorks Macro feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMacroData.#ctor(SolidWorks.Interop.sldworks.IMacroFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMirrorPartData">
            <summary>
            Represents a SolidWorks Mirror Part feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMirrorPartData.#ctor(SolidWorks.Interop.sldworks.IMirrorPartFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMirrorPatternData">
            <summary>
            Represents a SolidWorks Mirror Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMirrorPatternData.#ctor(SolidWorks.Interop.sldworks.IMirrorPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMirrorSolidData">
            <summary>
            Represents a SolidWorks Mirror Solid feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMirrorSolidData.#ctor(SolidWorks.Interop.sldworks.IMirrorSolidFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMiterFlangeData">
            <summary>
            Represents a SolidWorks Miter Flange feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMiterFlangeData.#ctor(SolidWorks.Interop.sldworks.IMiterFlangeFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMotionPlotAxisData">
            <summary>
            Represents a SolidWorks Motion Plot Axis feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMotionPlotAxisData.#ctor(SolidWorks.Interop.sldworks.IMotionPlotAxisFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMotionPlotData">
            <summary>
            Represents a SolidWorks Motion Plot feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMotionPlotData.#ctor(SolidWorks.Interop.sldworks.IMotionPlotFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMoveCopyBodyData">
            <summary>
            Represents a SolidWorks Move Copy Body feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMoveCopyBodyData.#ctor(SolidWorks.Interop.sldworks.IMoveCopyBodyFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureOneBendData">
            <summary>
            Represents a SolidWorks One Bend feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureOneBendData.#ctor(SolidWorks.Interop.sldworks.IOneBendFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeaturePartingLineData">
            <summary>
            Represents a SolidWorks Parting Line feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeaturePartingLineData.#ctor(SolidWorks.Interop.sldworks.IPartingLineFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeaturePartingSurfaceData">
            <summary>
            Represents a SolidWorks Parting Surface feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeaturePartingSurfaceData.#ctor(SolidWorks.Interop.sldworks.IPartingSurfaceFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureProjectionCurveData">
            <summary>
            Represents a SolidWorks Projection Curve feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureProjectionCurveData.#ctor(SolidWorks.Interop.sldworks.IProjectionCurveFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureReferenceAxisData">
            <summary>
            Represents a SolidWorks Reference Axis feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureReferenceAxisData.#ctor(SolidWorks.Interop.sldworks.IRefAxisFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureReferencePlaneData">
            <summary>
            Represents a SolidWorks Reference Plane feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureReferencePlaneData.#ctor(SolidWorks.Interop.sldworks.IRefPlaneFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureReferencePointCurveData">
            <summary>
            Represents a SolidWorks Reference Point Curve feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureReferencePointCurveData.#ctor(SolidWorks.Interop.sldworks.IReferencePointCurveFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureReferencePointData">
            <summary>
            Represents a SolidWorks Reference Point feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureReferencePointData.#ctor(SolidWorks.Interop.sldworks.IRefPointFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureReplaceFaceData">
            <summary>
            Represents a SolidWorks Replace Face feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureReplaceFaceData.#ctor(SolidWorks.Interop.sldworks.IReplaceFaceFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureRevolveData">
            <summary>
            Represents a SolidWorks Revolve feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureRevolveData.#ctor(SolidWorks.Interop.sldworks.IRevolveFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureRibData">
            <summary>
            Represents a SolidWorks Rib feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureRibData.#ctor(SolidWorks.Interop.sldworks.IRibFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureRipData">
            <summary>
            Represents a SolidWorks Rip feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureRipData.#ctor(SolidWorks.Interop.sldworks.IRipFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSaveBodyData">
            <summary>
            Represents a SolidWorks Save Body feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSaveBodyData.#ctor(SolidWorks.Interop.sldworks.ISaveBodyFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureScaleData">
            <summary>
            Represents a SolidWorks Scale feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureScaleData.#ctor(SolidWorks.Interop.sldworks.IScaleFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSheetMetalData">
            <summary>
            Represents a SolidWorks Sheet Metal feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSheetMetalData.#ctor(SolidWorks.Interop.sldworks.ISheetMetalFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSheetMetalGussetData">
            <summary>
            Represents a SolidWorks Sheet Metal Gusset feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSheetMetalGussetData.#ctor(SolidWorks.Interop.sldworks.ISMGussetFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureShellData">
            <summary>
            Represents a SolidWorks Shell feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureShellData.#ctor(SolidWorks.Interop.sldworks.IShellFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureShutOffSurfaceData">
            <summary>
            Represents a SolidWorks Shut Off Surface feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureShutOffSurfaceData.#ctor(SolidWorks.Interop.sldworks.IShutOffSurfaceFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSimpleFilletData">
            <summary>
            Represents a SolidWorks Simple Fillet feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSimpleFilletData.#ctor(SolidWorks.Interop.sldworks.ISimpleFilletFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSimpleHoleData">
            <summary>
            Represents a SolidWorks Simple Hole feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSimpleHoleData.#ctor(SolidWorks.Interop.sldworks.ISimpleHoleFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSimulation3DContactData">
            <summary>
            Represents a SolidWorks Simulation 3D Contact feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSimulation3DContactData.#ctor(SolidWorks.Interop.sldworks.ISimulation3DContactFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSimulationDamperData">
            <summary>
            Represents a SolidWorks Simulation Damper feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSimulationDamperData.#ctor(SolidWorks.Interop.sldworks.ISimulationDamperFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSimulationForceData">
            <summary>
            Represents a SolidWorks Simulation Force feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSimulationForceData.#ctor(SolidWorks.Interop.sldworks.ISimulationForceFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSimulationGravityData">
            <summary>
            Represents a SolidWorks Simulation Gravity feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSimulationGravityData.#ctor(SolidWorks.Interop.sldworks.ISimulationGravityFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSimulationLinearSpringData">
            <summary>
            Represents a SolidWorks Simulation Linear Spring feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSimulationLinearSpringData.#ctor(SolidWorks.Interop.sldworks.ISimulationLinearSpringFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSimulationMotorData">
            <summary>
            Represents a SolidWorks Simulation Motor feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSimulationMotorData.#ctor(SolidWorks.Interop.sldworks.ISimulationMotorFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSketchedBendData">
            <summary>
            Represents a SolidWorks Sketched Bend feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSketchedBendData.#ctor(SolidWorks.Interop.sldworks.ISketchedBendFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSketchPatternData">
            <summary>
            Represents a SolidWorks Sketch Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSketchPatternData.#ctor(SolidWorks.Interop.sldworks.ISketchPatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSmartComponentData">
            <summary>
            Represents a SolidWorks Smart Component feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSmartComponentData.#ctor(SolidWorks.Interop.sldworks.ISmartComponentFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSplitBodyData">
            <summary>
            Represents a SolidWorks Split Body feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSplitBodyData.#ctor(SolidWorks.Interop.sldworks.ISplitBodyFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSplitLineData">
            <summary>
            Represents a SolidWorks Split Line feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSplitLineData.#ctor(SolidWorks.Interop.sldworks.ISplitLineFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceCutData">
            <summary>
            Represents a SolidWorks Surface Cut feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceCutData.#ctor(SolidWorks.Interop.sldworks.ISurfaceCutFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceExtendData">
            <summary>
            Represents a SolidWorks Surface Extend feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceExtendData.#ctor(SolidWorks.Interop.sldworks.ISurfaceExtendFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceExtrudeData">
            <summary>
            Represents a SolidWorks Surface Extrude feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceExtrudeData.#ctor(SolidWorks.Interop.sldworks.ISurfExtrudeFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceFillData">
            <summary>
            Represents a SolidWorks Surface Fill feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceFillData.#ctor(SolidWorks.Interop.sldworks.IFillSurfaceFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceFlattenData">
            <summary>
            Represents a SolidWorks Surface Flatten feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceFlattenData.#ctor(SolidWorks.Interop.sldworks.ISurfaceFlattenFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceKnitData">
            <summary>
            Represents a SolidWorks Surface Knit feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceKnitData.#ctor(SolidWorks.Interop.sldworks.ISurfaceKnitFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceOffsetData">
            <summary>
            Represents a SolidWorks Surface Offset feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceOffsetData.#ctor(SolidWorks.Interop.sldworks.ISurfaceOffsetFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfacePlanarData">
            <summary>
            Represents a SolidWorks Surface Planar feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfacePlanarData.#ctor(SolidWorks.Interop.sldworks.ISurfacePlanarFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceRadiateData">
            <summary>
            Represents a SolidWorks Surface Radiate feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceRadiateData.#ctor(SolidWorks.Interop.sldworks.ISurfaceRadiateFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceRevolveData">
            <summary>
            Represents a SolidWorks Surface Revolve feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceRevolveData.#ctor(SolidWorks.Interop.sldworks.ISurfRevolveFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceRuledData">
            <summary>
            Represents a SolidWorks Surface Ruled feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceRuledData.#ctor(SolidWorks.Interop.sldworks.IRuledSurfaceFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceTrimData">
            <summary>
            Represents a SolidWorks Surface Trim feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceTrimData.#ctor(SolidWorks.Interop.sldworks.ISurfaceTrimFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSweepData">
            <summary>
            Represents a SolidWorks Sweep feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSweepData.#ctor(SolidWorks.Interop.sldworks.ISweepFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureTablePatternData">
            <summary>
            Represents a SolidWorks Table Pattern feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureTablePatternData.#ctor(SolidWorks.Interop.sldworks.ITablePatternFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureThickenData">
            <summary>
            Represents a SolidWorks Thicken feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureThickenData.#ctor(SolidWorks.Interop.sldworks.IThickenFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureToolingSplitData">
            <summary>
            Represents a SolidWorks Tooling Split feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureToolingSplitData.#ctor(SolidWorks.Interop.sldworks.IToolingSplitFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureVariableFilletData">
            <summary>
            Represents a SolidWorks Variable Fillet feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureVariableFilletData.#ctor(SolidWorks.Interop.sldworks.IVariableFilletFeatureData2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureWeldmentBeadData">
            <summary>
            Represents a SolidWorks Weldment Bead feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureWeldmentBeadData.#ctor(SolidWorks.Interop.sldworks.IWeldmentBeadFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureWeldmentCutListData">
            <summary>
            Represents a SolidWorks Weldment Cut List feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureWeldmentCutListData.#ctor(SolidWorks.Interop.sldworks.IWeldmentCutListFeature)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureWeldmentMemberData">
            <summary>
            Represents a SolidWorks Weldment Member feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureWeldmentMemberData.#ctor(SolidWorks.Interop.sldworks.IWeldmentTrimExtendFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureWeldmentTrimExtendData">
            <summary>
            Represents a SolidWorks Weldment Trim Extend feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureWeldmentTrimExtendData.#ctor(SolidWorks.Interop.sldworks.IWeldmentTrimExtendFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureWrapSketchData">
            <summary>
            Represents a SolidWorks Wrap Sketch feature data
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureWrapSketchData.#ctor(SolidWorks.Interop.sldworks.IWrapSketchFeatureData)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureAttribute">
            <summary>
            Represents a SolidWorks Attribute feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureAttribute.#ctor(SolidWorks.Interop.sldworks.IAttribute)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureBodyFolder">
            <summary>
            Represents a SolidWorks Body Folder feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureBodyFolder.#ctor(SolidWorks.Interop.sldworks.IBodyFolder)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureBom">
            <summary>
            Represents a SolidWorks Bom feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureBom.#ctor(SolidWorks.Interop.sldworks.IBomFeature)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCamera">
            <summary>
            Represents a SolidWorks Camera feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCamera.#ctor(SolidWorks.Interop.sldworks.ICamera)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCommentFolder">
            <summary>
            Represents a SolidWorks Comment Folder feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCommentFolder.#ctor(SolidWorks.Interop.sldworks.ICommentFolder)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureCosmeticWeldBeadFolder">
            <summary>
            Represents a SolidWorks Cosmetic Weld Bead Folder feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureCosmeticWeldBeadFolder.#ctor(SolidWorks.Interop.sldworks.ICosmeticWeldBeadFolder)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureDetailCircle">
            <summary>
            Represents a SolidWorks Detail Circle feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureDetailCircle.#ctor(SolidWorks.Interop.sldworks.IDetailCircle)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureDrSection">
            <summary>
            Represents a SolidWorks Dr Section feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureDrSection.#ctor(SolidWorks.Interop.sldworks.IDrSection)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureFeatureFolder">
            <summary>
            Represents a SolidWorks Feature folder feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureFeatureFolder.#ctor(SolidWorks.Interop.sldworks.IFeatureFolder)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureLight">
            <summary>
            Represents a SolidWorks Light feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureLight.#ctor(SolidWorks.Interop.sldworks.ILight)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMate">
            <summary>
            Represents a SolidWorks Mate feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMate.#ctor(SolidWorks.Interop.sldworks.IMate2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMateReference">
            <summary>
            Represents a SolidWorks Mate Reference feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMateReference.#ctor(SolidWorks.Interop.sldworks.IMateReference)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureMotionStudyResults">
            <summary>
            Represents a SolidWorks Motion Study Results feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureMotionStudyResults.#ctor(SolidWorks.Interop.swmotionstudy.IMotionStudyResults)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureRefAxis">
            <summary>
            Represents a SolidWorks Reference Axis feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureRefAxis.#ctor(SolidWorks.Interop.sldworks.IRefAxis)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureReferenceCurve">
            <summary>
            Represents a SolidWorks Reference Curve feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureReferenceCurve.#ctor(SolidWorks.Interop.sldworks.IReferenceCurve)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureRefPlane">
            <summary>
            Represents a SolidWorks Reference Plane feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureRefPlane.#ctor(SolidWorks.Interop.sldworks.IRefPlane)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureRefPoint">
            <summary>
            Represents a SolidWorks Reference Point feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureRefPoint.#ctor(SolidWorks.Interop.sldworks.IRefPoint)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSensor">
            <summary>
            Represents a SolidWorks Sensor feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSensor.#ctor(SolidWorks.Interop.sldworks.ISensor)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSketch">
            <summary>
            Represents a SolidWorks Sketch feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSketch.#ctor(SolidWorks.Interop.sldworks.ISketch)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSketchBlockDefinition">
            <summary>
            Represents a SolidWorks Sketch Block Definition feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSketchBlockDefinition.#ctor(SolidWorks.Interop.sldworks.ISketchBlockDefinition)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSketchBlockInstance">
            <summary>
            Represents a SolidWorks Sketch Block Instance feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSketchBlockInstance.#ctor(SolidWorks.Interop.sldworks.ISketchBlockInstance)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSketchPicture">
            <summary>
            Represents a SolidWorks Sketch Picture feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSketchPicture.#ctor(SolidWorks.Interop.sldworks.ISketchPicture)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureSurfaceMid">
            <summary>
            Represents a SolidWorks Surface Mid feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureSurfaceMid.#ctor(SolidWorks.Interop.sldworks.IMidSurface3)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.FeatureTableAnchor">
            <summary>
            Represents a SolidWorks Table Anchor feature
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.FeatureTableAnchor.#ctor(SolidWorks.Interop.sldworks.ITableAnchor)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.Model">
            <summary>
            Represents a SolidWorks model of any type (Drawing, Part or Assembly)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.FilePath">
            <summary>
            The absolute file path of this model if it has been saved
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.HasBeenSaved">
            <summary>
            Indicates if this file has been saved (so exists on disk).
            If not, it's a new model currently only in-memory and will not have a file path
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.ModelType">
            <summary>
            The type of document such as a part, assembly or drawing
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.IsPart">
            <summary>
            True if this model is a part
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.IsAssembly">
            <summary>
            True if this model is an assembly
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.IsDrawing">
            <summary>
            True if this model is a drawing
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.Extension">
            <summary>
            Contains extended information about the model
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.ActiveConfiguration">
            <summary>
            Contains the current active configuration information
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.SelectionManager">
            <summary>
            The selection manager for this model
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.ConfigurationCount">
            <summary>
            Get the number of configurations
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.ConfigurationNames">
            <summary>
            Gets the configuration names
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.MassProperties">
            <summary>
            The mass properties of the part
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.DrawingSheetAdded">
            <summary>
            Called after the a drawing sheet was added
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.DrawingActiveSheetChanged">
            <summary>
            Called after the active drawing sheet has changed
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.DrawingActiveSheetChanging">
            <summary>
            Called before the active drawing sheet changes
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.DrawingSheetDeleted">
            <summary>
            Called after the a drawing sheet was deleted
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.ModelClosing">
            <summary>
            Called as the model is about to be closed
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.ModelModified">
            <summary>
            Called when the model is first modified since it was last saved.
            SOLIDWORKS marks the file as Dirty and sets <see cref="M:SolidWorks.Interop.sldworks.IModelDoc2.GetSaveFlag"/>
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.ModelRebuilt">
            <summary>
            Called after a model was rebuilt (any model type) or if the rollback bar position changed (for parts and assemblies).
            NOTE: Does not always fire on normal rebuild (Ctrl+B) on assemblies.
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.ModelSaved">
            <summary>
            Called as the model has been saved
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.ModelSaveCanceled">
            <summary>
            Called when the user cancels the save action and <see cref="E:AngelSix.SolidDna.Model.ModelSaved"/> will not be fired.
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.ModelSavingAs">
            <summary>
            Called before a model is saved with a new file name.
            Called before the Save As dialog is shown.
            Allows you to make changes that need to be included in the save. 
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.ModelInformationChanged">
            <summary>
            Called when any of the model properties changes
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.ActiveConfigurationChanged">
            <summary>
            Called when the active configuration has changed
            </summary>
        </member>
        <member name="E:AngelSix.SolidDna.Model.SelectionChanged">
            <summary>
            Called when the selected objects in the model have changed
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Model.#ctor(SolidWorks.Interop.sldworks.ModelDoc2)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Model.ReloadModelData">
            <summary>
            Reloads all variables and data about this model
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Model.SetupModelEventHandlers">
            <summary>
            Hooks into model-specific events for keeping track of up-to-date information
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Model.ClearModelEventHandlers">
            <summary>
            Unhooks model-specific events when model becomes inactive.
            Model becomes inactive when it is closed or when another model becomes the active model.
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Model.ActiveConfigChangePostNotify">
            <summary>
            Called when a part or assembly has its active configuration changed
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.AssemblyOrPartRebuilt(System.Object)">
            <summary>
            Called after an assembly or part was rebuilt or if the rollback bar position changed.
            </summary>
            <param name="firstFeatureBelowRollbackBar"></param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.DrawingItemAddNotify(System.Int32,System.String)">
            <summary>
            Called when a drawing item is added to the feature tree
            </summary>
            <param name="entityType">Type of entity that is changed</param>
            <param name="itemName">Name of entity that is changed</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.DrawingDeleteItemNotify(System.Int32,System.String)">
            <summary>
            Called when a drawing item is removed from the feature tree
            </summary>
            <param name="entityType">Type of entity that is changed</param>
            <param name="itemName">Name of entity that is changed</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.DrawingRebuilt">
            <summary>
            Called after a drawing was rebuilt.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.UserSelectionPostNotify">
            <summary>
            Called when the user changes the selected objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.FileSaveCanceled">
            <summary>
            Called when the user cancels the save action and <see cref="M:AngelSix.SolidDna.Model.FileSavePostNotify(System.Int32,System.String)"/> will not be fired.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.FileSavePostNotify(System.Int32,System.String)">
            <summary>
            Called when a model has been saved
            </summary>
            <param name="fileName">The name of the file that has been saved</param>
            <param name="saveType">The type of file that has been saved</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.FileSaveAsPreNotify(System.String)">
            <summary>
            Called when a model is about to be saved with a new file name.
            Called before the Save As dialog is shown.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.FileDestroyedNotify">
            <summary>
            Called when a model is about to be destroyed.
            This is a pre-notify so just clean up data, don't reload for new data yet
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.FileModified">
            <summary>
            Called when the model is first modified since it was last saved.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.SheetActivatePostNotify(System.String)">
            <summary>
            Called after the active drawing sheet is changed.
            </summary>
            <param name="sheetName">Name of the sheet that is activated</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.SheetActivatePreNotify(System.String)">
            <summary>
            Called before the active drawing sheet changes
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Model.SheetAddedNotify(System.String)">
            <summary>
            Called after a sheet is added.
            </summary>
            <param name="sheetName">Name of the new sheet</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.AsAssembly">
            <summary>
            Casts the current model to an assembly
            NOTE: Check the <see cref="P:AngelSix.SolidDna.Model.ModelType"/> to confirm this model is of the correct type before casting
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.AsPart">
            <summary>
            Casts the current model to a part
            NOTE: Check the <see cref="P:AngelSix.SolidDna.Model.ModelType"/> to confirm this model is of the correct type before casting
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.AsDrawing">
            <summary>
            Casts the current model to a drawing
            NOTE: Check the <see cref="P:AngelSix.SolidDna.Model.ModelType"/> to confirm this model is of the correct type before casting
            </summary>
            <returns></returns>
        </member>
        <member name="P:AngelSix.SolidDna.Model.Drawing">
            <summary>
            Accesses the current model as a drawing to expose all Drawing API calls.
            Check <see cref="P:AngelSix.SolidDna.Model.IsDrawing"/> before calling into this.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.Part">
            <summary>
            Accesses the current model as a part to expose all Part API calls.
            Check <see cref="P:AngelSix.SolidDna.Model.IsPart"/> before calling into this.
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.Model.Assembly">
            <summary>
            Accesses the current model as an assembly to expose all Assembly API calls.
            Check <see cref="P:AngelSix.SolidDna.Model.IsAssembly"/> before calling into this.
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Model.SetCustomProperty(System.String,System.String,System.String)">
            <summary>
            Sets a custom property to the given value.
            If a configuration is specified then the configuration-specific property is set
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
            <param name="configuration">The configuration to set the properties from, otherwise set custom property</param>
        </member>
        <member name="M:AngelSix.SolidDna.Model.GetCustomProperty(System.String,System.String,System.Boolean)">
             <summary>
             Gets a custom property by the given name
             </summary>
             <param name="name">The name of the custom property</param>
             <param name="configuration">The configuration to get the properties from, otherwise get custom property</param>
            <param name="resolved">True to get the resolved value of the property, false to get the actual text</param>
             <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.CustomProperties(System.Action{System.Collections.Generic.List{AngelSix.SolidDna.CustomProperty}},System.String)">
            <summary>
            Gets all of the custom properties in this model.
            Simply set the Value of the custom property to edit it
            </summary>
            <param name="action">The custom properties list to be worked on inside the action. NOTE: Do not store references to them outside of this action</param>
            <param name="configuration">Specify a configuration to get configuration-specific properties</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.EntityIsDrawingSheet(System.Int32)">
            <summary>
            Check if an entity that was added, changed or removed is a drawing sheet.
            </summary>
            <param name="entityType">Type of the entity</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.GetMaterial">
            <summary>
            Read the material from the model
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.SetMaterial(AngelSix.SolidDna.Material,System.String)">
            <summary>
            Sets the material for the model
            </summary>
            <param name="material">The material</param>
            <param name="configuration">The configuration to set the material on, null for the default</param>
            
        </member>
        <member name="M:AngelSix.SolidDna.Model.SelectedObjects(System.Action{System.Collections.Generic.List{AngelSix.SolidDna.SelectedObject}})">
            <summary>
            Gets all of the selected objects in the model
            </summary>
            <param name="action">The selected objects list to be worked on inside the action. NOTE: Do not store references to them outside of this action</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.Features(System.Action{AngelSix.SolidDna.ModelFeature,System.Int32})">
            <summary>
            Recurses the model for all of it's features and sub-features
            </summary>
            <param name="featureAction">The callback action that is called for each feature in the model</param>
        </member>
        <member name="M:AngelSix.SolidDna.Model.RecurseFeatures(System.Action{AngelSix.SolidDna.ModelFeature,System.Int32},SolidWorks.Interop.sldworks.Feature,System.Int32)">
            <summary>
            Recurses features and sub-features and provides a callback action to process and work with each feature
            </summary>
            <param name="featureAction">The callback action that is called for each feature in the model</param>
            <param name="startFeature">The feature to start at</param>
            <param name="featureDepth">The current depth of the sub-features based on the original calling feature</param>
        </member>
        <member name="M:AngelSix.SolidDna.Model.Components(System.Action{AngelSix.SolidDna.Component,System.Int32})">
            <summary>
            Recurses the model for all of it's components and sub-components
            </summary>
            <param name="componentAction">The callback action that is called for each component in the model</param>
        </member>
        <member name="M:AngelSix.SolidDna.Model.RecurseComponents(System.Action{AngelSix.SolidDna.Component,System.Int32},AngelSix.SolidDna.Component,System.Int32)">
            <summary>
            Recurses components and sub-components and provides a callback action to process and work with each components
            </summary>
            <param name="componentAction">The callback action that is called for each components in the component</param>
            <param name="startComponent">The components to start at</param>
            <param name="componentDepth">The current depth of the sub-components based on the original calling components</param>
        </member>
        <member name="M:AngelSix.SolidDna.Model.SaveAs(System.String,AngelSix.SolidDna.SaveAsVersion,AngelSix.SolidDna.SaveAsOptions,AngelSix.SolidDna.PdfExportData)">
            <summary>
            Saves a file to the specified path, with the specified options
            </summary>
            <param name="savePath">The path of the file to save as</param>
            <param name="version">The version</param>
            <param name="options">Any save as options</param>
            <param name="pdfExportData">The PDF Export data if the save as type is a PDF</param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Model.DisposeAllReferences">
            <summary>
            Clean up all COM references for this model, its children and anything that was used by this model
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ModelExtension">
            <summary>
            Represents a SolidWorks model extension of any type (Drawing, Part or Assembly)
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelExtension.Parent">
            <summary>
            The parent Model for this extension
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ModelExtension.#ctor(SolidWorks.Interop.sldworks.ModelDocExtension,AngelSix.SolidDna.Model)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ModelExtension.CustomPropertyEditor(System.String)">
            <summary>
            Gets a configuration-specific custom property editor for the specified configuration
            If no configuration is specified the default custom property manager is returned
            
            NOTE: Custom Property Editor must be disposed of once finished
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.ModelExtension.GetMassProperties(System.Boolean)">
            <summary>
            Gets the mass properties of a part/assembly
            </summary>
            <param name="doNotThrowOnError">If true, don't throw on errors, just return empty mass</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.ModelTemplateType">
            <summary>
            The type of template for a model, from <see cref="T:SolidWorks.Interop.swconst.swDocTemplateTypes_e"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelTemplateType.None">
            <summary>
            Nothing is open
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelTemplateType.Part">
            <summary>
            A part is open
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelTemplateType.Assembly">
            <summary>
            An assembly is open
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelTemplateType.Drawing">
            <summary>
            A drawing is open
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelTemplateType.InContext">
            <summary>
            An in-context part is open
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ModelType">
            <summary>
            The type of SolidWorks model the <see cref="T:SolidWorks.Interop.sldworks.ModelDoc2"/> is, from <see cref="T:SolidWorks.Interop.swconst.swDocumentTypes_e"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelType.None">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelType.Part">
            <summary>
            SolidWorks Part
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelType.Assembly">
            <summary>
            SolidWorks Assembly
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelType.Drawing">
            <summary>
            SolidWorks Drawing
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelType.DocumentManager">
            <summary>
            SolidWorks Document Manager File
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelType.ExternalFile">
            <summary>
            External File
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelType.ImportedAssembly">
            <summary>
            Imported Assembly
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ModelType.ImportedPart">
            <summary>
            Imported Part
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SaveAsOptions">
            <summary>
            Save as options, from <see cref="T:SolidWorks.Interop.swconst.swSaveAsOptions_e"/>
            </summary>
            <remarks>
            <para>
                Options are bit-masked (flags) so you can specify one or more:
                
                <code>
                    model.SaveAs("name.sldprt", options: SaveAsOptions.Silent | SaveAsOptions.AvoidRebuildOnSave);
                </code>
            </para>
            <para>
                These options only apply to saving to native SolidWorks file formats. 
            </para>
            <para>
                For example, to export a SolidWorks file to a VRML file format, use 
                ISldWorks::GetUserPreferenceToggle and ISldWorks::SetUserPreferenceToggle 
                with swExportVrmlAllComponentsInSingleFile
            </para>
            </remarks>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.None">
            <summary>
            To specify no specific options
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.Silent">
            <summary>
            Saves without any user interaction
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.Copy">
            <summary>
            Saves the file as a copy
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.SaveReferenced">
            <summary>
            Supports parts, assemblies and drawings; this setting indicates to 
            save all components (sub-assemblies and parts) in both assemblies 
            and drawings. If a part has an external reference, then this setting
            indicates to save the external reference
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.AvoidRebuildOnSave">
            <summary>
            Prevents rebuilding the model prior to saving
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.UpdateInactiveViews">
            <summary>
            Not a valid option for IPartDoc::SaveToFile2; this setting is only
            applicable for a drawing that has one or more sheets; this setting 
            updates the views on inactive sheets
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.OverrideSaveEmodel">
            <summary>
            Saves eDrawings-related information into a section of the file being 
            saved; specifying this setting overrides the Tools, Options,
            System Options, General, Save eDrawings data in SolidWorks document 
            setting; not a valid option for IPartDoc::SaveToFile2
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.SaveEmodelData">
            <summary>
            Obsolete. Do not use
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.DetachedDrawing">
            <summary>
            Saves a drawing as a detached drawing.
            Not a valid option for IPartDoc::SaveToFile2
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsOptions.IgnoreBiography">
            <summary>
            Prune a SolidWorks file's revision history to just the current file name
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SaveAsVersion">
            <summary>
            Version of a particular format to save the document, from <see cref="T:SolidWorks.Interop.swconst.swSaveAsVersion_e"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsVersion.CurrentVersion">
            <summary>
            Saves the model in the default way with no special settings (this is the typical way)
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsVersion.SolidWorks98plus">
            <summary>
            Obsolete and no longer supported
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsVersion.FormatProE">
            <summary>
            Saves the model in Pro/E format
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsVersion.StandardDrawing">
            <summary>
            Saves a detached drawing as a standard drawing
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsVersion.DetachedDrawing">
            <summary>
            Saves a standard drawing as a detached drawing
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.PdfExportData">
            <summary>
            The data used to specify options when exporting as a PDF
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.PdfExportData.mExportData">
            <summary>
            The native export data object
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PdfExportData.ExportData">
            <summary>
            Gets the underlying export data needed for the underlying ModelExtension SaveAs call
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PdfExportData.ViewPdfAfterSaving">
            <summary>
            If true the PDF will be opened after it has been saved
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PdfExportData.ExportAs3D">
            <summary>
            Specifies if the PDF output should be in 3D PDF format
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.PdfExportData.WhichSheets">
            <summary>
            Gets the current setting (set using <see cref="M:AngelSix.SolidDna.PdfExportData.SetSheets(AngelSix.SolidDna.PdfSheetsToExport,System.Collections.Generic.List{System.String})"/>)
            for which sheets are to be exported.
            </summary>
            <remarks>
            To set the value, use <see cref="M:AngelSix.SolidDna.PdfExportData.SetSheets(AngelSix.SolidDna.PdfSheetsToExport,System.Collections.Generic.List{System.String})"/>
            </remarks>
        </member>
        <member name="P:AngelSix.SolidDna.PdfExportData.Sheets">
            <summary>
            Gets the specific sheets names that will be exported.
            </summary>
            <remarks>
            To set the value, use <see cref="M:AngelSix.SolidDna.PdfExportData.SetSheets(AngelSix.SolidDna.PdfSheetsToExport,System.Collections.Generic.List{System.String})"/>
            </remarks>
        </member>
        <member name="M:AngelSix.SolidDna.PdfExportData.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.PdfExportData.SetSheets(AngelSix.SolidDna.PdfSheetsToExport,System.Collections.Generic.List{System.String})">
            <summary>
            Sets which sheets should be exported when saving
            </summary>
            <param name="whichSheets">Which sheets to be exported</param>
            <param name="specificSheets">If specific sheets was specified, this the list of named sheets to be exported</param>
            <returns>Returns true if successful</returns>
        </member>
        <member name="T:AngelSix.SolidDna.PdfSheetsToExport">
            <summary>
            Specifies which drawing sheets will get exported to PDF, from <see cref="T:SolidWorks.Interop.swconst.swExportDataSheetsToExport_e"/>
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.PdfSheetsToExport.ExportAllSheets">
            <summary>
            Exports all drawing sheets
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.PdfSheetsToExport.ExportCurrentSheet">
            <summary>
            Exports the currently active sheet
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.PdfSheetsToExport.ExportSpecifiedSheets">
            <summary>
            Exports the sheets specified in the sheets array
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.ModelSaveResult">
            <summary>
            The result of a file save attempt
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelSaveResult.Successful">
            <summary>
            Whether the save operation was successful or not
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelSaveResult.Warnings">
            <summary>
            Any warnings for the file save operation
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.ModelSaveResult.Errors">
            <summary>
            Any errors for the file save operation
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ModelSaveResult.ToString">
            <summary>
            Nice output to string
            </summary>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.SaveAsErrors">
            <summary>
            Any errors of a model save operation. 
            </summary>
            <remarks>
            <para>
                Errors are bit-masked (flags) so you can get each error via:
                
                <code>
                    errors.GetFlags();
                </code>
            </para>
            </remarks>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.None">
            <summary>
            No errors
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.GenericSaveError">
            <summary>
            There was an unknown error
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.ReadOnlySaveError">
            <summary>
            Failed to save as the destination file is read-only
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileNameEmpty">
            <summary>
            The filename was not provided
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileNameContainsAtSign">
            <summary>
            Filename cannot contain the @ symbol
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileLockError">
            <summary>
            The file is write-locked
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileSaveFormatNotAvailable">
            <summary>
            The save as file type is not valid
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileSaveWithRebuildError">
            <summary>
            Obsolete: This error is now in a warning
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileSaveAsDoNotOverwrite">
            <summary>
            The file already exists, and the save is set to not override existing files
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileSaveAsInvalidFileExtension">
            <summary>
            The file save extension does not match the SolidWorks document type
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileSaveAsNoSelection">
            <summary>
            Save the selected bodies in a part document. Valid option for IPartDoc::SaveToFile2; 
            however, not a valid option for IModelDocExtension::SaveAs
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileSaveAsBadEDrawingsVersion">
            <summary>
            The version of eDrawings is invalid
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileSaveAsNameExceedsMaxPathLength">
            <summary>
            The filename is too long
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileSaveAsNotSupported">
            <summary>
            The save as operation is not supported, or was executed is such a way that the resulting
            file might not be complete, possibly because SolidWorks is hidden; 
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsErrors.FileSaveRequiresSavingReferences">
            <summary>
            Saving an assembly with renamed components requires saving the references
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SaveAsWarnings">
            <summary>
            Any warnings of a model save operation. 
            Warnings mean the save was successful, but it had some warnings.
            </summary>
            <remarks>
            <para>
                Warnings are bit-masked (flags) so you can get each warning via:
                
                <code>
                    warnings.GetFlags();
                </code>
            </para>
            </remarks>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.None">
            <summary>
            No warnings
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.RebuildError">
            <summary>
            There was a problem rebuilding the model
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.NeedsRebuild">
            <summary>
            The model needs to be rebuilt
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.ViewsNeedUpdate">
            <summary>
            The drawing views need updating
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.AnimatorNeedToSolve">
            <summary>
            The animator needs to be solved
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.AnimatorFeatureEdits">
            <summary>
            The animator feature has edits
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.EdrwingsBadSelection">
            <summary>
            The eDrawing file has a bad selection
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.AnimatorLightEdits">
            <summary>
            The animator lights has edits
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.AnimatorCameraViews">
            <summary>
            The animator camera views have issues
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.AnimatorSectionViews">
            <summary>
            The animator section views have issues
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.MissingOLEObjects">
            <summary>
            The file is missing OLE objects
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.SaveAsWarnings.OpenedViewOnly">
            <summary>
            The file is using the opened view only
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.Note">
            <summary>
            A SolidWorks Note object
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Note.#ctor(SolidWorks.Interop.sldworks.INote)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Note.GetBOMBalloonUpperText">
            <summary>
            Gets the upper text of the selected BOM Balloon note
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Note.GetBOMBalloonLowerText">
            <summary>
            Gets the upper text of the selected BOM Balloon note
            </summary>
            <returns></returns>
        </member>
        <member name="M:AngelSix.SolidDna.Note.SetBOMBalloonText(AngelSix.SolidDna.NoteTextContent,System.String,AngelSix.SolidDna.NoteTextContent,System.String)">
            <summary>
            Sets the text for the selected BOM Balloon note
            </summary>
            <param name="upperTextStyle">The upper text style</param>
            <param name="upperText">The upper text</param>
            <param name="lowerTextStyle">The lower text style</param>
            <param name="lowerText">The lower text</param>
            <remarks>
                If the upper or lower text style is <see cref="F:AngelSix.SolidDna.NoteTextContent.TextQuantity"/>
                or <see cref="F:AngelSix.SolidDna.NoteTextContent.ItemNumber"/>, then SOLIDWORKS ignores the 
                specified upper or lower text.
            </remarks>
        </member>
        <member name="T:AngelSix.SolidDna.NoteTextContent">
            <summary>
            BOM Balloon note text style
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.NoteTextContent.Custom">
            <summary>
            Custom text
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.NoteTextContent.CustomProperty">
            <summary>
            Custom property
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.NoteTextContent.ItemNumber">
            <summary>
            Item number
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.NoteTextContent.TextQuantity">
            <summary>
            Text quantity
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.SelectionManager">
            <summary>
            Represents a SolidWorks selection manager
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SelectionManager.#ctor(SolidWorks.Interop.sldworks.SelectionMgr)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SelectionManager.SelectedObjects(System.Action{System.Collections.Generic.List{AngelSix.SolidDna.SelectedObject}})">
            <summary>
            Gets all of the selected objects in the model
            </summary>
            <param name="action">The selected objects list to be worked on inside the action.
                NOTE: Do not store references to them outside of this action</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.SelectedObject">
            <summary>
            Represents a selected object of a SolidWorks object.
            The type can be one of many different things
            
            NOTE: All mappings from selected entities to specific objects are here
            http://help.solidworks.com/2016/English/api/swconst/SolidWorks.Interop.swconst~SolidWorks.Interop.swconst.swSelectType_e.html
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SelectedObject.ObjectType">
            <summary>
            The type of the selected object
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SelectedObject.IsFeature">
            <summary>
            True if this object is a feature.
            From the feature you can check the specific feature type and
            get the specific feature from that
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SelectedObject.IsDimension">
            <summary>
            True if this object is a dimension
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SelectedObject.#ctor(System.Object)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.SelectedObject.AsFeature(System.Action{AngelSix.SolidDna.ModelFeature})">
            <summary>
            Casts the object to a <see cref="T:AngelSix.SolidDna.ModelFeature"/>.
            Check with <see cref="P:AngelSix.SolidDna.SelectedObject.IsFeature"/> first to assure that it is this type
            </summary>
            <param name="action">The feature is passed into this action to be used within it</param>
        </member>
        <member name="M:AngelSix.SolidDna.SelectedObject.AsDimension(System.Action{AngelSix.SolidDna.ModelDisplayDimension})">
            <summary>
            Casts the object to a <see cref="T:AngelSix.SolidDna.ModelDisplayDimension"/>.
            Check with <see cref="P:AngelSix.SolidDna.SelectedObject.IsDimension"/> first to assure that it is this type
            </summary>
            <param name="action">The Dimension is passed into this action to be used within it</param>
        </member>
        <member name="T:AngelSix.SolidDna.SolidDnaEnvironment">
            <summary>
            Settings and objects related to the current SolidDNA environment
            </summary>
        </member>
        <member name="P:AngelSix.SolidDna.SolidDnaEnvironment.LogAndIgnoreUncaughtExceptions">
            <summary>
            If true, any uncaught exceptions that get thrown will get caught,
            logged to the <see cref="!:ILogFactory"/> then swallowed.
            
            WARNING: If turning this on, be aware you may get null/default values
            being returned from function calls if they throw errors
            so be vigilant on null checking if so
            </summary>
        </member>
        <member name="T:AngelSix.SolidDna.Taskpane">
            <summary>
            Represents a SolidWorks Taskpane
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Taskpane.#ctor(SolidWorks.Interop.sldworks.ITaskpaneView)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.Taskpane.AddControlAsync``1(System.String,System.String)">
            <summary>
            Adds a control (Windows <see cref="T:System.Windows.Forms.UserControl"/>) to the taskpane
            that has been exposed to COM and has a given ProgId
            </summary>
            <typeparam name="T">The type of UserControl being created</typeparam>
            <param name="progId">The [ProgId()] attribute value adorned on the UserControl class</param>
            <param name="licenseKey">The license key (for specific SolidWorks add-in types)</param>
            <returns></returns>
        </member>
        <member name="T:AngelSix.SolidDna.ThreadHelpers">
            <summary>
            Methods for aiding in thread-related actions
            </summary>
        </member>
        <member name="F:AngelSix.SolidDna.ThreadHelpers.mInvoker">
            <summary>
            A blank control created on the UI thread used to invoke tasks on the UI thread
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ThreadHelpers.Enable(System.Windows.Forms.Control)">
            <summary>
            Should be called from the UI thread to setup an Invoker (a user control)
            used to invoke any require tasks on the UI thread
            </summary>
        </member>
        <member name="M:AngelSix.SolidDna.ThreadHelpers.RunOnUIThread(System.Action)">
            <summary>
            Runs the specified action on the UI thread
            
            NOTE: Only possible right now if the application is making use of TaskpaneIntegration as the
            UI dispatcher is via the Taskpane control on the UI thread
            
            TODO: Find a better way to access an invoker/dispatcher without needing a Taskpane
            </summary>
            <param name="action">The action to run</param>
        </member>
        <member name="M:AngelSix.SolidDna.ThreadHelpers.RunOnUIThreadAsync(System.Action)">
            <summary>
            Runs the specified action on the UI thread.
            
            IMPORTANT: Make sure the caller (doing the await RunOnUIThreadAwait)
            does not await anything inside the action that can be locked by the 
            parent scope (the scope of the await itself) otherwise a deadlock
            could occur.
            
            NOTE: Only possible right now if the application is making use of TaskpaneIntegration as the
            UI dispatcher is via the Taskpane control on the UI thread
            
            TODO: Find a better way to access an invoker/dispatcher without needing a Taskpane
            </summary>
            <param name="action">The action to run</param>
        </member>
    </members>
</doc>
